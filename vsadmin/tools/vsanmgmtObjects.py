from pyVmomi.VmomiSupport import CreateDataType, CreateManagedType, CreateEnumType, AddVersion, AddVersionParent, F_LINK, F_LINKABLE, F_OPTIONAL, F_SECRET

from pyVmomi.VmomiSupport import AddVersion, AddVersionParent
from pyVmomi.VmomiSupport import newestVersions, stableVersions, publicVersions,\
                                 oldestVersions

def _AddVersionParents(vsanVer, parents):
   for group in parents:
      for parent in group:
         AddVersionParent(vsanVer, parent)

"""
Vmodl version definition for each Vsan release.
Initially Vsan just uses "vim" namespace.
"""

# Vsan Java-IDL based Vmodl, corresponding to vSphere 5.5
_VERSION_9 = "vim.version.version9"

# Vsan version 1 ("vim"), corresponding to vSphere 6.0-6.2
# Vsan switch to pyhon-IDL based Vmodl around vSphere 6.1
_VERSION_10 = "vim.version.version10"

# Vsan version 2 ("vim"), corresponding to vSphere 6.5
_VERSION_11 = "vim.version.version11"


# Declare vSAN version compatibility map.
# For vSAN version introduced in vSphere major release, we should be compatible
# to the latest core VMODL versions(in developing);
# For vSAN version added in patch release, we should be compatible to last core
# VMODL versions
VSAN_VERSION_TABLE = [
# versionNumber, versionId, compatible versions for NS: vmodl, reflect, vim, query,
   (3,           '6.6',                                 3,     2,       11,  4),
# XXX: currently vSAN version for vSphere 6.5 U1 is still not determined.
# So this version may need to be updated.
   (4,           '6.6.1',                               3,     2,       11,  4),
]

# vSAN version string template, to be consitent to 'vsan.version.version3'
VSAN_VERSION_TEMPLATE = "vsan.version.version%d"
# vSAN version symbol template, to be consistent to _VSAN_VER3
VSAN_VERSION_SYMBOL_TEMPLATE = "_VSAN_VER%d"
# vSAN init version
VSAN_INIT_VERSION = "vsan.version.version3"

VSAN_VERSIONS = []
versionNumbers = []
versionIds = []
for version, versionId, vmodl, reflect, vim, query in VSAN_VERSION_TABLE:
   # Check version definition conflict
   if version in versionNumbers:
	  # version number conflict
      raise Exception("vSAN VMODL version %d already exists" % version)
   else:
      versionNumbers.append(version)
   if versionId in versionIds:
      # version id conflict
      raise Exception("vSAN VMODL versionId %s already exists" % versionId)
   else:
      versionIds.append(versionId)

   vsanVersion = VSAN_VERSION_TEMPLATE % version
   # All vSAN versions should be compatible to core VMODL versions,
   # and all older vSAN versions,
   # and itself.
   versionParents = [
      ["vsan.version.version%d" % (x + 1) for x in range(2, version)],
      ["vmodl.version.version%d" % x for x in range(vmodl)],
      ["vmodl.reflect.version.version%d" % (x + 1) for x in range(reflect)],
      ["vim.version.version%d" % (x + 1) for x in range(vim)],
      ["vmodl.query.version.version%d" % (x + 1) for x in range(query)],
   ]

   # Register vSAN version into VMOMI context
   AddVersion(vsanVersion, "vsan", versionId,
              (vsanVersion == VSAN_INIT_VERSION), "vsan")
   _AddVersionParents(vsanVersion, versionParents)
   VSAN_VERSIONS.append(vsanVersion)

   # Declare vSAN version symbol,
   # which should be used while define concrete VMODL types
   globals()[VSAN_VERSION_SYMBOL_TEMPLATE % version] = vsanVersion

VSAN_NEWEST_VERSION = VSAN_VERSION_TEMPLATE % max(versionNumbers)
# Update newest/stable for the latest version
newestVersions.Add(VSAN_NEWEST_VERSION)
stableVersions.Add(VSAN_NEWEST_VERSION)
publicVersions.Add(VSAN_NEWEST_VERSION)

VSAN_VER_2017Q3 = 'vsan.version.version4'  # 2017 Q3 release


CreateManagedType('vim.cluster.VsanPerformanceManager', 'VsanPerformanceManager', 'vmodl.ManagedObject', 'vim.version.version9', [], [('vsanPerfDiagnose', 'VsanPerfDiagnose', 'vsan.version.version3', (('perfDiagnoseQuery', 'vim.cluster.VsanPerfDiagnoseQuerySpec', 'vsan.version.version3', 0, None), ('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfDiagnosticResult[]', 'vim.cluster.VsanPerfDiagnosticResult[]'), 'System.Read', None), ('queryClusterHealth', 'VsanPerfQueryClusterHealth', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vmodl.DynamicData[]', 'vmodl.DynamicData[]'), 'System.Read', None), ('toggleVerboseMode', 'VsanPerfToggleVerboseMode', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('verboseMode', 'boolean', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryNodeInformation', 'VsanPerfQueryNodeInformation', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfNodeInformation[]', 'vim.cluster.VsanPerfNodeInformation[]'), 'System.Read', None), ('queryTimeRanges', 'VsanPerfQueryTimeRanges', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('querySpec', 'vim.cluster.VsanPerfTimeRangeQuerySpec', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfTimeRange[]', 'vim.cluster.VsanPerfTimeRange[]'), 'System.Read', None), ('setStatsObjectPolicy', 'VsanPerfSetStatsObjectPolicy', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('createStatsObject', 'VsanPerfCreateStatsObject', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('queryVsanPerf', 'VsanPerfQueryPerf', 'vim.version.version9', (('querySpecs', 'vim.cluster.VsanPerfQuerySpec[]', 'vim.version.version9', 0, None), ('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanPerfEntityMetricCSV[]', 'vim.cluster.VsanPerfEntityMetricCSV[]'), 'System.Read', None), ('createStatsObjectTask', 'VsanPerfCreateStatsObjectTask', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('deleteStatsObjectTask', 'VsanPerfDeleteStatsObjectTask', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('deleteTimeRange', 'VsanPerfDeleteTimeRange', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('name', 'string', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryStatsObjectInformation', 'VsanPerfQueryStatsObjectInformation', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanObjectInformation', 'vim.cluster.VsanObjectInformation'), 'System.Read', None), ('deleteStatsObject', 'VsanPerfDeleteStatsObject', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('saveTimeRanges', 'VsanPerfSaveTimeRanges', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('timeRanges', 'vim.cluster.VsanPerfTimeRange[]', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('getSupportedDiagnosticExceptions', 'VsanPerfGetSupportedDiagnosticExceptions', 'vsan.version.version3', tuple(), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfDiagnosticException[]', 'vim.cluster.VsanPerfDiagnosticException[]'), 'System.Read', None), ('getSupportedEntityTypes', 'VsanPerfGetSupportedEntityTypes', 'vim.version.version9', tuple(), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfEntityType[]', 'vim.cluster.VsanPerfEntityType[]'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcDiskManagementSystem', 'VimClusterVsanVcDiskManagementSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('initializeDiskMappings', 'InitializeDiskMappings', 'vim.version.version10', (('spec', 'vim.vsan.host.DiskMappingCreationSpec', 'vim.version.version10', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('retrieveAllFlashCapabilities', 'RetrieveAllFlashCapabilities', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.VsanHostCapability[]', 'vim.vsan.host.VsanHostCapability[]'), 'System.Read', None), ('queryClusterDataEfficiencyCapacityState', 'QueryClusterDataEfficiencyCapacityState', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'vim.vsan.DataEfficiencyCapacityState', 'vim.vsan.DataEfficiencyCapacityState'), 'System.Read', None), ('queryDiskMappings', 'QueryDiskMappings', 'vim.version.version10', (('host', 'vim.HostSystem', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.DiskMapInfoEx[]', 'vim.vsan.host.DiskMapInfoEx[]'), 'System.Read', None), ])
CreateManagedType('vim.vsan.VsanHostVdsSystem', 'VsanHostVdsSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanCompleteMigrateVmsToVds', 'VsanCompleteMigrateVmsToVds', 'vsan.version.version3', (('jobId', 'string', 'vsan.version.version3', 0, None), ('newState', 'string', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('vsanMigrateVmsToVds', 'VsanMigrateVmsToVds', 'vsan.version.version3', (('vmConfigSpecs', 'vim.vsan.VsanVmVdsMigrationSpec[]', 'vsan.version.version3', 0, None), ('vdsUuid', 'string', 'vsan.version.version3', 0, None), ('timeoutSec', 'long', 'vsan.version.version3', 0, None), ('revert', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanIscsiTargetSystem', 'VsanIscsiTargetSystem', 'vmodl.ManagedObject', 'vim.version.version11', [], [('removeIscsiInitiatorsFromTarget', 'VsanVitRemoveIscsiInitiatorsFromTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('removeIscsiInitiatorsFromGroup', 'VsanVitRemoveIscsiInitiatorsFromGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('editIscsiLUN', 'VsanVitEditIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunSpec', 'vim.cluster.VsanIscsiLUNSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getIscsiLUN', 'VsanVitGetIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunId', 'int', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiLUN', 'vim.cluster.VsanIscsiLUN'), 'System.Read', None), ('editIscsiTarget', 'VsanVitEditIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetSpec', 'vim.cluster.VsanIscsiTargetSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('addIscsiInitiatorsToGroup', 'VsanVitAddIscsiInitiatorsToGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('addIscsiInitiatorsToTarget', 'VsanVitAddIscsiInitiatorsToTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryIscsiTargetServiceVersion', 'VsanVitQueryIscsiTargetServiceVersion', 'vim.version.version11', tuple(), (0, 'string', 'string'), 'System.Read', None), ('addIscsiTargetToGroup', 'VsanVitAddIscsiTargetToGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('removeIscsiTargetFromGroup', 'VsanVitRemoveIscsiTargetFromGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('getIscsiLUNs', 'VsanVitGetIscsiLUNs', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAliases', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiLUN[]', 'vim.cluster.VsanIscsiLUN[]'), 'System.Read', None), ('removeIscsiLUN', 'VsanVitRemoveIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunId', 'int', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getIscsiInitiatorGroup', 'VsanVitGetIscsiInitiatorGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiInitiatorGroup', 'vim.cluster.VsanIscsiInitiatorGroup'), 'System.Read', None), ('removeIscsiInitiatorGroup', 'VsanVitRemoveIscsiInitiatorGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('getHomeObject', 'VsanVitGetHomeObject', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0, 'vim.cluster.VsanObjectInformation', 'vim.cluster.VsanObjectInformation'), 'System.Read', None), ('getIscsiTarget', 'VsanVitGetIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiTarget', 'vim.cluster.VsanIscsiTarget'), 'System.Read', None), ('removeIscsiTarget', 'VsanVitRemoveIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('addIscsiLUN', 'VsanVitAddIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunSpec', 'vim.cluster.VsanIscsiLUNSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getIscsiInitiatorGroups', 'VsanVitGetIscsiInitiatorGroups', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiInitiatorGroup[]', 'vim.cluster.VsanIscsiInitiatorGroup[]'), 'System.Read', None), ('getIscsiTargets', 'VsanVitGetIscsiTargets', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiTarget[]', 'vim.cluster.VsanIscsiTarget[]'), 'System.Read', None), ('addIscsiTarget', 'VsanVitAddIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetSpec', 'vim.cluster.VsanIscsiTargetSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('addIscsiInitiatorGroup', 'VsanVitAddIscsiInitiatorGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ])
CreateManagedType('vim.VsanUpgradeSystemEx', 'VsanUpgradeSystemEx', 'vmodl.ManagedObject', 'vim.version.version10', [], [('performUpgrade', 'PerformVsanUpgradeEx', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('performObjectUpgrade', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('downgradeFormat', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('allowReducedRedundancy', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('excludeHosts', 'vim.HostSystem[]', 'vim.version.version10', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanDiskFormatConversionSpec', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryUpgradeStatus', 'VsanQueryUpgradeStatusEx', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0, 'vim.cluster.VsanUpgradeStatusEx', 'vim.cluster.VsanUpgradeStatusEx'), 'System.Read', None), ('retrieveSupportedFormatVersion', 'RetrieveSupportedVsanFormatVersion', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'int', 'int'), 'System.Read', None), ('performUpgradePreflightCheck', 'PerformVsanUpgradePreflightCheckEx', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('downgradeFormat', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanDiskFormatConversionSpec', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanDiskFormatConversionCheckResult', 'vim.cluster.VsanDiskFormatConversionCheckResult'), 'System.Read', None), ('performUpgradePreflightAsyncCheck', 'PerformVsanUpgradePreflightAsyncCheck_Task', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('downgradeFormat', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanDiskFormatConversionSpec', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanSpaceReportSystem', 'VsanSpaceReportSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('querySpaceUsage', 'VsanQuerySpaceUsage', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanSpaceUsage', 'vim.cluster.VsanSpaceUsage'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanCapabilitySystem', 'VsanCapabilitySystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('getCapabilities', 'VsanGetCapabilities', 'vim.version.version10', (('targets', 'vmodl.ManagedObject[]', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanCapability[]', 'vim.cluster.VsanCapability[]'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVumSystem', 'VsanVumSystem', 'vmodl.ManagedObject', 'vsan.version.version4', [], [('fetchIsoDepotCookie', 'FetchIsoDepotCookie', 'vsan.version.version4', (('username', 'string', 'vsan.version.version4', 0, None), ('password', 'string', 'vsan.version.version4', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('getVsanVumConfig', 'GetVsanVumConfig', 'vsan.version.version4', tuple(), (0, 'vim.cluster.VsanVumSystemConfig', 'vim.cluster.VsanVumSystemConfig'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanUpdateManager', 'VsanUpdateManager', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanVibInstall', 'VsanVibInstall_Task', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vibSpecs', 'vim.vsan.VsanVibSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('scanResults', 'vim.vsan.VsanVibScanResult[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('firmwareSpecs', 'vim.host.VsanHclFirmwareUpdateSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('rolling', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('noSigCheck', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('vsanVibInstallPreflightCheck', 'VsanVibInstallPreflightCheck', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.VsanVibInstallPreflightStatus', 'vim.vsan.VsanVibInstallPreflightStatus'), 'System.Read', None), ('vsanVibScan', 'VsanVibScan', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vibSpecs', 'vim.vsan.VsanVibSpec[]', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanVibScanResult[]', 'vim.vsan.VsanVibScanResult[]'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanObjectSystem', 'VsanObjectSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('setVsanObjectPolicy', 'VosSetVsanObjectPolicy', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('vsanObjectUuid', 'string', 'vim.version.version9', 0, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryObjectIdentities', 'VsanQueryObjectIdentities', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('objTypes', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL, None), ('includeHealth', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeObjIdentity', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeSpaceSummary', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanObjectIdentityAndHealth', 'vim.cluster.VsanObjectIdentityAndHealth'), 'System.Read', None), ('queryVsanObjectInformation', 'VosQueryVsanObjectInformation', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('vsanObjectQuerySpecs', 'vim.cluster.VsanObjectQuerySpec[]', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanObjectInformation[]', 'vim.cluster.VsanObjectInformation[]'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanSystemEx', 'VsanSystemEx', 'vmodl.ManagedObject', 'vim.version.version11', [], [('getAboutInfoEx', 'VsanGetAboutInfoEx', 'vsan.version.version3', tuple(), (0, 'vim.vsan.host.AboutInfoEx', 'vim.vsan.host.AboutInfoEx'), 'System.Read', None), ('getRuntimeStats', 'VsanHostGetRuntimeStats', 'vsan.version.version3', (('stats', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.host.RuntimeStats', 'vim.vsan.host.RuntimeStats'), 'System.Read', None), ('queryWhatIfEvacuationResult', 'VsanQueryWhatIfEvacuationResult', 'vsan.version.version3', (('evacEntityUuid', 'string', 'vsan.version.version3', 0, None), ), (0, 'vim.vsan.host.VsanWhatIfEvacResult', 'vim.vsan.host.VsanWhatIfEvacResult'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcClusterConfigSystem', 'VsanVcClusterConfigSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('getConfigInfoEx', 'VsanClusterGetConfig', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'vim.vsan.ConfigInfoEx', 'vim.vsan.ConfigInfoEx'), 'System.Read', None), ('reconfigureEx', 'VsanClusterReconfig', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('vsanReconfigSpec', 'vim.vsan.ReconfigSpec', 'vim.version.version10', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getRuntimeStats', 'VsanClusterGetRuntimeStats', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('stats', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.RuntimeStatsHostMap[]', 'vim.vsan.RuntimeStatsHostMap[]'), 'System.Read', None), ('rekeyEncryptedCluster', 'VsanEncryptedClusterRekey_Task', 'vsan.version.version3', (('encryptedCluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('deepRekey', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('allowReducedRedundancy', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanHealthSystem', 'HostVsanHealthSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('queryAdvCfg', 'VsanHostQueryAdvCfg', 'vim.version.version9', (('options', 'string[]', 'vim.version.version9', 0, None), ('includeAllAdvOptions', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.option.OptionValue[]', 'vim.option.OptionValue[]'), 'System.Read', None), ('queryRunIperfClient', 'VsanHostQueryRunIperfClient', 'vim.version.version9', (('multicast', 'boolean', 'vim.version.version9', 0, None), ('serverIp', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.host.VsanNetworkLoadTestResult', 'vim.host.VsanNetworkLoadTestResult'), 'System.Read', None), ('queryObjectHealthSummary', 'VsanHostQueryObjectHealthSummary', 'vim.version.version9', (('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeObjUuids', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('localHostOnly', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanObjectOverallHealth', 'vim.host.VsanObjectOverallHealth'), 'System.Read', None), ('stopProactiveRebalance', 'VsanStopProactiveRebalance', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('checkClomdLiveness', 'VsanHostClomdLiveness', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('repairImmediateObjects', 'VsanHostRepairImmediateObjects', 'vim.version.version9', (('uuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('repairType', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanRepairObjectsResult', 'vim.host.VsanRepairObjectsResult'), 'System.Read', None), ('queryVerifyNetworkSettings', 'VsanHostQueryVerifyNetworkSettings', 'vim.version.version9', (('peers', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('ROBOStretchedClusterWitnesses', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('vMotionPeers', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanNetworkHealthResult', 'vim.host.VsanNetworkHealthResult'), 'System.Read', None), ('cleanupVmdkLoadTest', 'VsanHostCleanupVmdkLoadTest', 'vim.version.version9', (('runname', 'string', 'vim.version.version9', 0, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('getHclInfo', 'VsanGetHclInfo', 'vim.version.version9', (('includeVendorInfo', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanHostHclInfo', 'vim.host.VsanHostHclInfo'), 'System.Read', None), ('queryEncryptionHealthSummary', 'VsanHostQueryEncryptionHealthSummary', 'vsan.version.version3', tuple(), (0, 'vim.host.VsanEncryptionHealthSummary', 'vim.host.VsanEncryptionHealthSummary'), 'System.Read', None), ('flashScsiControllerFirmware', 'VsanFlashScsiControllerFirmware_Task', 'vsan.version.version3', (('spec', 'vim.host.VsanHclFirmwareUpdateSpec', 'vsan.version.version3', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('waitForVsanHealthGenerationIdChange', 'VsanWaitForVsanHealthGenerationIdChange', 'vim.version.version9', (('timeout', 'int', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryVersion', 'VsanHostQueryHealthSystemVersion', 'vim.version.version9', tuple(), (0, 'string', 'string'), 'System.Read', None), ('startProactiveRebalance', 'VsanStartProactiveRebalance', 'vim.version.version9', (('timeSpan', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('varianceThreshold', 'float', 'vim.version.version9', 0 | F_OPTIONAL, None), ('timeThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('rateThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('runVmdkLoadTest', 'VsanHostRunVmdkLoadTest', 'vim.version.version9', (('runname', 'string', 'vim.version.version9', 0, None), ('durationSec', 'int', 'vim.version.version9', 0, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0, None), ), (0, 'vim.host.VsanVmdkLoadTestResult[]', 'vim.host.VsanVmdkLoadTestResult[]'), 'System.Read', None), ('querySmartStats', 'VsanHostQuerySmartStats', 'vsan.version.version3', (('disks', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('includeAllDisks', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanSmartStatsHostSummary', 'vim.host.VsanSmartStatsHostSummary'), 'System.Read', None), ('prepareVmdkLoadTest', 'VsanHostPrepareVmdkLoadTest', 'vim.version.version9', (('runname', 'string', 'vim.version.version9', 0, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('queryRunIperfServer', 'VsanHostQueryRunIperfServer', 'vim.version.version9', (('multicast', 'boolean', 'vim.version.version9', 0, None), ('serverIp', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanNetworkLoadTestResult', 'vim.host.VsanNetworkLoadTestResult'), 'System.Read', None), ('getProactiveRebalanceInfo', 'VsanGetProactiveRebalanceInfo', 'vim.version.version9', tuple(), (0, 'vim.host.VsanProactiveRebalanceInfoEx', 'vim.host.VsanProactiveRebalanceInfoEx'), 'System.Read', None), ('queryPhysicalDiskHealthSummary', 'VsanHostQueryPhysicalDiskHealthSummary', 'vim.version.version9', tuple(), (0, 'vim.host.VsanPhysicalDiskHealthSummary', 'vim.host.VsanPhysicalDiskHealthSummary'), 'System.Read', None), ('queryHostInfoByUuids', 'VsanHostQueryHostInfoByUuids', 'vim.version.version9', (('uuids', 'string[]', 'vim.version.version9', 0, None), ), (0, 'vim.host.VsanQueryResultHostInfo[]', 'vim.host.VsanQueryResultHostInfo[]'), 'System.Read', None), ('createVmHealthTest', 'VsanHostCreateVmHealthTest', 'vsan.version.version3', (('timeout', 'int', 'vsan.version.version3', 0, None), ), (0, 'vim.cluster.VsanHostCreateVmHealthTestResult', 'vim.cluster.VsanHostCreateVmHealthTestResult'), 'System.Read', None), ('queryCheckLimits', 'VsanHostQueryCheckLimits', 'vim.version.version9', tuple(), (0, 'vim.host.VsanLimitHealthResult', 'vim.host.VsanLimitHealthResult'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcClusterHealthSystem', 'VsanVcClusterHealthSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('purgeHclFiles', 'VsanPurgeHclFiles', 'vsan.version.version3', (('sha1sums', 'string[]', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryClusterCreateVmHealthHistoryTest', 'VsanQueryVcClusterCreateVmHealthHistoryTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterCreateVmHealthTestResult[]', 'vim.cluster.VsanClusterCreateVmHealthTestResult[]'), 'System.Read', None), ('setLogLevel', 'VsanHealthSetLogLevel', 'vim.version.version9', (('level', 'vim.cluster.VsanHealthLogLevelEnum', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'System.Read', None), ('testVsanClusterTelemetryProxy', 'VsanHealthTestVsanClusterTelemetryProxy', 'vim.version.version9', (('proxyConfig', 'vim.cluster.VsanClusterTelemetryProxyConfig', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('uploadHclDb', 'VsanVcUploadHclDb', 'vim.version.version9', (('db', 'string', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('querySmartStatsSummary', 'VsanQueryVcClusterSmartStatsSummary', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0, 'vim.host.VsanSmartStatsHostSummary[]', 'vim.host.VsanSmartStatsHostSummary[]'), 'System.Read', None), ('updateHclDbFromWeb', 'VsanVcUpdateHclDbFromWeb', 'vim.version.version9', (('url', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('getVsanClusterSilentChecks', 'VsanHealthGetVsanClusterSilentChecks', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('repairClusterObjectsImmediate', 'VsanHealthRepairClusterObjectsImmediate', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('uuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryClusterNetworkPerfTest', 'VsanQueryVcClusterNetworkPerfTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('multicast', 'boolean', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterNetworkLoadTestResult', 'vim.cluster.VsanClusterNetworkLoadTestResult'), 'System.Read', None), ('queryClusterVmdkLoadHistoryTest', 'VsanQueryVcClusterVmdkLoadHistoryTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('taskId', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterVmdkLoadTestResult[]', 'vim.cluster.VsanClusterVmdkLoadTestResult[]'), 'System.Read', None), ('queryClusterCreateVmHealthTest', 'VsanQueryVcClusterCreateVmHealthTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('timeout', 'int', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterCreateVmHealthTestResult', 'vim.cluster.VsanClusterCreateVmHealthTestResult'), 'System.Read', None), ('queryVsanClusterHealthCheckInterval', 'VsanHealthQueryVsanClusterHealthCheckInterval', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'int', 'int'), 'System.Read', None), ('queryAllSupportedHealthChecks', 'VsanQueryAllSupportedHealthChecks', 'vsan.version.version3', tuple(), (0, 'vim.cluster.VsanClusterHealthCheckInfo[]', 'vim.cluster.VsanClusterHealthCheckInfo[]'), 'System.Read', None), ('getClusterHclInfo', 'VsanVcClusterGetHclInfo', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('includeHostsResult', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeVendorInfo', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('esxRelease', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterHclInfo', 'vim.cluster.VsanClusterHclInfo'), 'System.Read', None), ('queryAttachToSrHistory', 'VsanQueryAttachToSrHistory', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('taskId', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanAttachToSrOperation[]', 'vim.cluster.VsanAttachToSrOperation[]'), 'System.Read', None), ('rebalanceCluster', 'VsanRebalanceCluster', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('targetHosts', 'vim.HostSystem[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('runVmdkLoadTest', 'VsanVcClusterRunVmdkLoadTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('runname', 'string', 'vim.version.version9', 0, None), ('durationSec', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('action', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('sendVsanTelemetry', 'VsanHealthSendVsanTelemetry', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryClusterNetworkPerfHistoryTest', 'VsanQueryVcClusterNetworkPerfHistoryTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterNetworkLoadTestResult[]', 'vim.cluster.VsanClusterNetworkLoadTestResult[]'), 'System.Read', None), ('queryClusterHealthSummary', 'VsanQueryVcClusterHealthSummary', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('vmCreateTimeout', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeObjUuids', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('fields', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('fetchFromCache', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('perspective', 'vim.vsan.VsanHealthPerspective', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterHealthSummary', 'vim.cluster.VsanClusterHealthSummary'), 'System.Read', None), ('stopRebalanceCluster', 'VsanStopRebalanceCluster', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('targetHosts', 'vim.HostSystem[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryVsanClusterHealthConfig', 'VsanHealthQueryVsanClusterHealthConfig', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHealthConfigs', 'vim.cluster.VsanClusterHealthConfigs'), 'System.Read', None), ('attachVsanSupportBundleToSr', 'VsanAttachVsanSupportBundleToSr', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('srNumber', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('downloadHclFile', 'VsanDownloadHclFile_Task', 'vsan.version.version3', (('sha1sums', 'string[]', 'vsan.version.version3', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryClusterVmdkWorkloadTypes', 'VsanQueryVcClusterVmdkWorkloadTypes', 'vim.version.version9', tuple(), (0, 'vim.cluster.VsanStorageWorkloadType[]', 'vim.cluster.VsanStorageWorkloadType[]'), 'System.Read', None), ('setVsanClusterSilentChecks', 'VsanHealthSetVsanClusterSilentChecks', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('addSilentChecks', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('removeSilentChecks', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryVerifyClusterHealthSystemVersions', 'VsanVcClusterQueryVerifyHealthSystemVersions', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHealthSystemVersionResult', 'vim.cluster.VsanClusterHealthSystemVersionResult'), 'System.Read', None), ('setVsanClusterTelemetryConfig', 'VsanHealthSetVsanClusterTelemetryConfig', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('vsanClusterHealthConfig', 'vim.cluster.VsanClusterHealthConfigs', 'vim.version.version9', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('isRebalanceRunning', 'VsanHealthIsRebalanceRunning', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('targetHosts', 'vim.HostSystem[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('setVsanClusterHealthCheckInterval', 'VsanHealthSetVsanClusterHealthCheckInterval', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('vsanClusterHealthCheckInterval', 'int', 'vim.version.version9', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanVcsaDeployerSystem', 'VsanVcsaDeployerSystem', 'vmodl.ManagedObject', 'vim.version.version11', [], [('postConfigForVcsa', 'VsanPostConfigForVcsa', 'vim.version.version11', (('spec', 'vim.vsan.VsanVcPostDeployConfigSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('vcsaGetBootstrapProgress', 'VsanVcsaGetBootstrapProgress', 'vim.version.version11', (('taskId', 'string[]', 'vim.version.version11', 0, None), ), (0, 'vim.vsan.VsanVcsaDeploymentProgress[]', 'vim.vsan.VsanVcsaDeploymentProgress[]'), 'System.Read', None), ('prepareVsanForVcsa', 'VsanPrepareVsanForVcsa', 'vim.version.version11', (('spec', 'vim.vsan.VsanPrepareVsanForVcsaSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ])
CreateManagedType('vim.vsan.VsanVdsSystem', 'VsanVdsSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanVdsMigrateVss', 'VsanVdsMigrateVss', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0, None), ('migrationPlan', 'vim.vsan.VsanVdsMigrationPlan', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vdsName', 'string', 'vsan.version.version3', 0, None), ('vmnicDevices', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('infraVm', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('vsanVdsGetMigrationPlan', 'VsanVdsGetMigrationPlan', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0, None), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vdsName', 'string', 'vsan.version.version3', 0, None), ('vmnicDevices', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('infraVm', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.VsanVdsMigrationPlan', 'vim.vsan.VsanVdsMigrationPlan'), 'System.Read', None), ('rollbackVdsToVss', 'VsanRollbackVdsToVss', 'vsan.version.version3', (('task', 'vim.Task', 'vsan.version.version3', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcStretchedClusterSystem', 'VimClusterVsanVcStretchedClusterSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('isWitnessHost', 'VSANVcIsWitnessHost', 'vim.version.version10', (('host', 'vim.HostSystem', 'vim.version.version10', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('setPreferredFaultDomain', 'VSANVcSetPreferredFaultDomain', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('preferredFd', 'string', 'vim.version.version10', 0, None), ('witnessHost', 'vim.HostSystem', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getPreferredFaultDomain', 'VSANVcGetPreferredFaultDomain', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANPreferredFaultDomainInfo', 'vim.cluster.VSANPreferredFaultDomainInfo'), 'System.Read', None), ('isWitnessVirtualAppliance', 'VSANIsWitnessVirtualAppliance', 'vim.version.version11', (('hosts', 'vim.HostSystem[]', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanHostVirtualApplianceInfo[]', 'vim.host.VsanHostVirtualApplianceInfo[]'), 'System.Read', None), ('getWitnessHosts', 'VSANVcGetWitnessHosts', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANWitnessHostInfo[]', 'vim.cluster.VSANWitnessHostInfo[]'), 'System.Read', None), ('retrieveStretchedClusterVcCapability', 'VSANVcRetrieveStretchedClusterVcCapability', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('verifyAllConnected', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANStretchedClusterCapability[]', 'vim.cluster.VSANStretchedClusterCapability[]'), 'System.Read', None), ('convertToStretchedCluster', 'VSANVcConvertToStretchedCluster', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('faultDomainConfig', 'vim.cluster.VSANStretchedClusterFaultDomainConfig', 'vim.version.version10', 0, None), ('witnessHost', 'vim.HostSystem', 'vim.version.version10', 0, None), ('preferredFd', 'string', 'vim.version.version10', 0, None), ('diskMapping', 'vim.vsan.host.DiskMapping', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeWitnessHost', 'VSANVcRemoveWitnessHost', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('witnessHost', 'vim.HostSystem', 'vim.version.version10', 0 | F_OPTIONAL, None), ('witnessAddress', 'string', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ])
CreateManagedType('vim.VsanPhoneHomeSystem', 'VsanPhoneHomeSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanPerformOnlineHealthCheck', 'VsanPerformOnlineHealthCheck', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanClusterHealthSystem', 'VsanClusterHealthSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('queryPhysicalDiskHealthSummary', 'VsanQueryClusterPhysicalDiskHealthSummary', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.host.VsanPhysicalDiskHealthSummary[]', 'vim.host.VsanPhysicalDiskHealthSummary[]'), 'System.Read', None), ('queryClusterNetworkPerfTest', 'VsanQueryClusterNetworkPerfTest', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('multicast', 'boolean', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterNetworkLoadTestResult', 'vim.cluster.VsanClusterNetworkLoadTestResult'), 'System.Read', None), ('queryAdvCfgSync', 'VsanQueryClusterAdvCfgSync', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('options', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterAdvCfgSyncResult[]', 'vim.cluster.VsanClusterAdvCfgSyncResult[]'), 'System.Read', None), ('repairClusterImmediateObjects', 'VsanRepairClusterImmediateObjects', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('uuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterHealthSystemObjectsRepairResult', 'vim.cluster.VsanClusterHealthSystemObjectsRepairResult'), 'System.Read', None), ('queryVerifyClusterNetworkSettings', 'VsanQueryVerifyClusterNetworkSettings', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterNetworkHealthResult', 'vim.cluster.VsanClusterNetworkHealthResult'), 'System.Read', None), ('queryClusterCreateVmHealthTest', 'VsanQueryClusterCreateVmHealthTest', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('timeout', 'int', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterCreateVmHealthTestResult', 'vim.cluster.VsanClusterCreateVmHealthTestResult'), 'System.Read', None), ('queryClusterHealthSystemVersions', 'VsanQueryClusterHealthSystemVersions', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHealthSystemVersionResult', 'vim.cluster.VsanClusterHealthSystemVersionResult'), 'System.Read', None), ('getClusterHclInfo', 'VsanClusterGetHclInfo', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHclInfo', 'vim.cluster.VsanClusterHclInfo'), 'System.Read', None), ('queryCheckLimits', 'VsanQueryClusterCheckLimits', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterLimitHealthResult', 'vim.cluster.VsanClusterLimitHealthResult'), 'System.Read', None), ('queryCaptureVsanPcap', 'VsanQueryClusterCaptureVsanPcap', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('duration', 'int', 'vim.version.version9', 0, None), ('vmknic', 'vim.cluster.VsanClusterHostVmknicMapping[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeRawPcap', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeIgmp', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsMsgTypeFilter', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsPorts', 'int[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('clusterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanVsanClusterPcapResult', 'vim.cluster.VsanVsanClusterPcapResult'), 'System.Read', None), ('checkClusterClomdLiveness', 'VsanCheckClusterClomdLiveness', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterClomdLivenessResult', 'vim.cluster.VsanClusterClomdLivenessResult'), 'System.Read', None), ])
CreateManagedType('vim.VsanMassCollector', 'VsanMassCollector', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanRetrieveProperties', 'VsanRetrieveProperties', 'vsan.version.version3', (('massCollectorSpecs', 'vim.VsanMassCollectorSpec[]', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'vmodl.query.PropertyCollector.ObjectContent[]', 'vmodl.query.PropertyCollector.ObjectContent[]'), 'System.Read', None), ])
CreateDataType('vim.vsan.VsanBurnInTest', 'VsanBurnInTest', 'vmodl.DynamicData', 'vsan.version.version3', [('testname', 'string', 'vsan.version.version3', 0), ('workload', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('duration', 'long', 'vsan.version.version3', 0), ('result', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.DataEfficiencyCapacityState', 'VimVsanDataEfficiencyCapacityState', 'vmodl.DynamicData', 'vim.version.version10', [('logicalCapacity', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('logicalCapacityUsed', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('physicalCapacity', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('physicalCapacityUsed', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('dedupMetadataSize', 'long', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanEncryptionHealthSummary', 'VsanEncryptionHealthSummary', 'vmodl.DynamicData', 'vsan.version.version3', [('hostname', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptionInfo', 'vim.vsan.host.EncryptionInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('overallKmsHealth', 'string', 'vsan.version.version3', 0), ('kmsHealth', 'vim.host.VsanKmsHealth[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptionIssues', 'vim.host.VsanEncryptionIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskResults', 'vim.host.VsanDiskEncryptionHealth[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL), ('aesniEnabled', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanWhatIfEvacDetail', 'VsanWhatIfEvacDetail', 'vmodl.DynamicData', 'vsan.version.version3', [('success', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('bytesToSync', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('inaccessibleObjects', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('incompliantObjects', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('extraSpaceNeeded', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('failedDueToInaccessibleObjects', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfTimeRange', 'VsanPerfTimeRange', 'vmodl.DynamicData', 'vsan.version.version3', [('name', 'string', 'vsan.version.version3', 0), ('startTime', 'vmodl.DateTime', 'vsan.version.version3', 0), ('endTime', 'vmodl.DateTime', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanFaultDomainSpec', 'VimClusterVsanFaultDomainSpec', 'vmodl.DynamicData', 'vim.version.version10', [('hosts', 'vim.HostSystem[]', 'vim.version.version10', 0), ('name', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanClusterHealthGroup', 'VsanClusterHealthGroup', 'vmodl.DynamicData', 'vim.version.version9', [('groupId', 'string', 'vim.version.version9', 0), ('groupName', 'string', 'vim.version.version9', 0), ('groupHealth', 'string', 'vim.version.version9', 0), ('groupTests', 'vim.cluster.VsanClusterHealthTest[]', 'vim.version.version9', 0 | F_OPTIONAL), ('groupDetails', 'vim.cluster.VsanClusterHealthResultBase[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanSpaceUsageDetailResult', 'VsanSpaceUsageDetailResult', 'vmodl.DynamicData', 'vim.version.version9', [('spaceUsageByObjectType', 'vim.cluster.VsanObjectSpaceSummary[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanAttachToSrOperation', 'VsanAttachToSrOperation', 'vmodl.DynamicData', 'vim.version.version9', [('task', 'vim.Task', 'vim.version.version9', 0 | F_OPTIONAL), ('success', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('timestamp', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('srNumber', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanObjectSpaceSummary', 'VsanObjectSpaceSummary', 'vmodl.DynamicData', 'vim.version.version9', [('objType', 'vim.cluster.VsanObjectTypeEnum', 'vim.version.version9', 0 | F_OPTIONAL), ('overheadB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('temporaryOverheadB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('primaryCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('provisionCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('reservedCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('overReservedB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('physicalUsedB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('usedB', 'long', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfGraph', 'VsanPerfGraph', 'vmodl.DynamicData', 'vim.version.version9', [('id', 'string', 'vim.version.version9', 0), ('metrics', 'vim.cluster.VsanPerfMetricId[]', 'vim.version.version9', 0), ('unit', 'vim.cluster.VsanPerfStatsUnitType', 'vim.version.version9', 0), ('threshold', 'vim.cluster.VsanPerfThreshold', 'vim.version.version9', 0 | F_OPTIONAL), ('name', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclFirmwareUpdateSpec', 'VsanHclFirmwareUpdateSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('hbaDevice', 'string', 'vsan.version.version3', 0), ('fwFiles', 'vim.host.VsanHclFirmwareFile[]', 'vsan.version.version3', 0), ('allowDowngrade', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterBalancePerDiskInfo', 'VsanClusterBalancePerDiskInfo', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('fullness', 'long', 'vim.version.version9', 0), ('variance', 'long', 'vim.version.version9', 0), ('fullnessAboveThreshold', 'long', 'vim.version.version9', 0), ('dataToMoveB', 'long', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanUnicastAddressInfo', 'VsanUnicastAddressInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('address', 'string', 'vsan.version.version3', 0), ('port', 'int', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanNetworkHealthResult', 'VsanNetworkHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('host', 'vim.HostSystem', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanVmknicPresent', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('ipSubnets', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('peerHealth', 'vim.host.VsanNetworkPeerHealthResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('vMotionHealth', 'vim.host.VsanNetworkPeerHealthResult[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('multicastConfig', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('unicastConfig', 'string', 'vsan.version.version4', 0 | F_OPTIONAL), ('inUnicast', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetServiceDefaultConfigSpec', 'VsanIscsiTargetServiceDefaultConfigSpec', 'vmodl.DynamicData', 'vim.version.version11', [('networkInterface', 'string', 'vim.version.version11', 0), ('port', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('iscsiTargetAuthSpec', 'vim.cluster.VsanIscsiTargetAuthSpec', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.StoragePolicyStatus', 'VsanStoragePolicyStatus', 'vmodl.DynamicData', 'vim.version.version9', [('id', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('expectedValue', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('currentValue', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfMemberInfo', 'VsanPerfMemberInfo', 'vmodl.DynamicData', 'vim.version.version9', [('thumbprint', 'string', 'vim.version.version9', 0), ('memberUuid', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('isSupportUnicast', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('unicastAddressInfos', 'vim.cluster.VsanUnicastAddressInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfMetricId', 'VsanPerfMetricId', 'vmodl.DynamicData', 'vim.version.version9', [('label', 'string', 'vim.version.version9', 0), ('group', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('rollupType', 'vim.cluster.VsanPerfSummaryType', 'vim.version.version9', 0 | F_OPTIONAL), ('statsType', 'vim.cluster.VsanPerfStatsType', 'vim.version.version9', 0 | F_OPTIONAL), ('name', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('metricsCollectInterval', 'int', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANWitnessHostInfo', 'VimClusterVSANWitnessHostInfo', 'vmodl.DynamicData', 'vim.version.version10', [('nodeUuid', 'string', 'vim.version.version10', 0), ('faultDomainName', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFdName', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFdUuid', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('unicastAgentAddr', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('host', 'vim.HostSystem', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.BrokenDiskChainIssue', 'VsanBrokenDiskChainIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version11', [('uuids', 'string[]', 'vim.version.version11', 0)])
CreateDataType('vim.cluster.VsanClusterNetworkLoadTestResult', 'VsanClusterNetworkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('clusterResult', 'vim.cluster.VsanClusterProactiveTestResult', 'vim.version.version9', 0), ('hostResults', 'vim.host.VsanNetworkLoadTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanDiskRebalanceResult', 'VsanDiskRebalanceResult', 'vmodl.DynamicData', 'vsan.version.version3', [('status', 'vim.host.VsanDiskBalanceState', 'vsan.version.version3', 0), ('bytesMoving', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('remainingBytesToMove', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL), ('maxDiskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL), ('minDiskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL), ('avgDiskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterNetworkPartitionInfo', 'VsanClusterNetworkPartitionInfo', 'vmodl.DynamicData', 'vim.version.version9', [('hosts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiLUN', 'VsanIscsiLUN', 'vim.cluster.VsanIscsiLUNCommonInfo', 'vim.version.version11', [('targetAlias', 'string', 'vim.version.version11', 0), ('uuid', 'string', 'vim.version.version11', 0), ('actualSize', 'long', 'vim.version.version11', 0), ('objectInformation', 'vim.cluster.VsanObjectInformation', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVsanClusterPcapResult', 'VsanVsanClusterPcapResult', 'vmodl.DynamicData', 'vim.version.version9', [('pkts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('groups', 'vim.cluster.VsanVsanClusterPcapGroup[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issues', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanVsanPcapResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfDiagnoseQuerySpec', 'VsanPerfDiagnoseQuerySpec', 'vmodl.DynamicData', 'vsan.version.version3', [('startTime', 'vmodl.DateTime', 'vsan.version.version3', 0), ('endTime', 'vmodl.DateTime', 'vsan.version.version3', 0), ('queryType', 'vim.cluster.VsanPerfDiagnosticQueryType', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.host.DiskMapInfoEx', 'VimVsanHostDiskMapInfoEx', 'vmodl.DynamicData', 'vim.version.version10', [('mapping', 'vim.vsan.host.DiskMapping', 'vim.version.version10', 0), ('isMounted', 'boolean', 'vim.version.version10', 0), ('unlockedEncrypted', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('isAllFlash', 'boolean', 'vim.version.version10', 0), ('isDataEfficiency', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL), ('encryptionInfo', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanDiskFormatConversionCheckResult', 'VsanDiskFormatConversionCheckResult', 'vim.VsanUpgradeSystem.PreflightCheckResult', 'vim.version.version10', [('isSupported', 'boolean', 'vim.version.version10', 0), ('targetVersion', 'int', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthSystemObjectsRepairResult', 'VsanClusterHealthSystemObjectsRepairResult', 'vmodl.DynamicData', 'vim.version.version9', [('inRepairingQueueObjects', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('failedRepairObjects', 'vim.host.VsanFailedRepairObjectResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0)])
CreateDataType('vim.vsan.VsanVibSpec', 'VsanVibSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('metaUrl', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('metaSha1Sum', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vibUrl', 'string', 'vsan.version.version3', 0), ('vibSha1Sum', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanVnicVdsMigrationSpec', 'VsanVnicVdsMigrationSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('key', 'int', 'vsan.version.version3', 0), ('vdsBacking', 'vim.vm.device.VirtualDevice.BackingInfo', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanVcKmipServersHealth', 'VsanVcKmipServersHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('health', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsProviderId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsHealth', 'vim.host.VsanKmsHealth[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('clientCertHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('clientCertExpireDate', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanConfigCheckResult', 'VsanConfigCheckResult', 'vmodl.DynamicData', 'vsan.version.version3', [('vsanEnabled', 'boolean', 'vsan.version.version3', 0), ('issues', 'vim.vsan.VsanConfigBaseIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanNetworkConfigPortgroupWithNoRedundancyIssue', 'VsanNetworkConfigPortgroupWithNoRedundancyIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('portgroupName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0 | F_OPTIONAL), ('pg', 'vim.Network', 'vsan.version.version3', 0 | F_OPTIONAL), ('numPnics', 'long', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkVMotionVmknicNotFountIssue', 'VsanNetworkVMotionVmknicNotFountIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('hostWithoutVmotionVmknic', 'vim.HostSystem', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.ResyncIopsInfo', 'ResyncIopsInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('resyncIops', 'int', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.ReconfigSpec', 'VimVsanReconfigSpec', 'vmodl.DynamicData', 'vim.version.version10', [('vsanClusterConfig', 'vim.vsan.cluster.ConfigInfo', 'vim.version.version10', 0 | F_OPTIONAL), ('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('diskMappingSpec', 'vim.cluster.VsanDiskMappingsConfigSpec', 'vim.version.version10', 0 | F_OPTIONAL), ('faultDomainsSpec', 'vim.cluster.VsanFaultDomainsConfigSpec', 'vim.version.version10', 0 | F_OPTIONAL), ('modify', 'boolean', 'vim.version.version10', 0), ('allowReducedRedundancy', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL), ('resyncIopsLimitConfig', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('iscsiSpec', 'vim.cluster.VsanIscsiTargetServiceSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('dataEncryptionConfig', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.DiskMappingCreationSpec', 'VimVsanHostDiskMappingCreationSpec', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('cacheDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0 | F_OPTIONAL), ('capacityDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0), ('creationType', 'vim.vsan.host.DiskMappingCreationType', 'vim.version.version10', 0)])
CreateDataType('vim.VsanObjectTypeRule', 'VsanObjectTypeRule', 'vmodl.DynamicData', 'vsan.version.version3', [('objectType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('attributes', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetSpec', 'VsanIscsiTargetSpec', 'vim.cluster.VsanIscsiTargetCommonInfo', 'vim.version.version11', [('storagePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('newAlias', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanLimitHealthResult', 'VsanLimitHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0), ('maxComponents', 'int', 'vim.version.version9', 0), ('freeComponents', 'int', 'vim.version.version9', 0), ('componentLimitHealth', 'string', 'vim.version.version9', 0), ('lowestFreeDiskSpacePct', 'int', 'vim.version.version9', 0), ('usedDiskSpaceB', 'long', 'vim.version.version9', 0), ('totalDiskSpaceB', 'long', 'vim.version.version9', 0), ('diskFreeSpaceHealth', 'string', 'vim.version.version9', 0), ('reservedRcSizeB', 'long', 'vim.version.version9', 0), ('totalRcSizeB', 'long', 'vim.version.version9', 0), ('rcFreeReservationHealth', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanIscsiTargetServiceConfig', 'VsanIscsiTargetServiceConfig', 'vmodl.DynamicData', 'vim.version.version11', [('defaultConfig', 'vim.cluster.VsanIscsiTargetServiceDefaultConfigSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('enabled', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanObjectOverallHealth', 'VsanObjectOverallHealth', 'vmodl.DynamicData', 'vim.version.version9', [('objectHealthDetail', 'vim.host.VsanObjectHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('objectVersionCompliance', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultColumnInfo', 'VsanClusterHealthResultColumnInfo', 'vmodl.DynamicData', 'vim.version.version9', [('label', 'string', 'vim.version.version9', 0), ('type', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.vsan.VsanVdsPgMigrationSpec', 'VsanVdsPgMigrationSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('vssPgName', 'string', 'vsan.version.version3', 0), ('dvPgName', 'string', 'vsan.version.version3', 0), ('vdsPgSetting', 'vim.dvs.VmwareDistributedVirtualSwitch.VmwarePortConfigPolicy', 'vsan.version.version3', 0), ('vdsPgType', 'string', 'vsan.version.version3', 0), ('hosts', 'vim.vsan.VsanVdsPgMigrationHostInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('collisionRename', 'boolean', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanClusterNetworkHealthResult', 'VsanClusterNetworkHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostResults', 'vim.host.VsanNetworkHealthResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanVmknicPresent', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('matchingMulticastConfig', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('matchingIpSubnets', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('pingTestSuccess', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('largePingTestSuccess', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('hostLatencyCheckSuccess', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('potentialMulticastIssue', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('otherHostsInVsanCluster', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('partitions', 'vim.cluster.VsanClusterNetworkPartitionInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsWithVsanDisabled', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsDisconnected', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsCommFailure', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsInEsxMaintenanceMode', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsInVsanMaintenanceMode', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('infoAboutUnexpectedHosts', 'vim.host.VsanQueryResultHostInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('clusterInUnicastMode', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiInitiatorGroup', 'VsanIscsiInitiatorGroup', 'vmodl.DynamicData', 'vim.version.version11', [('name', 'string', 'vim.version.version11', 0), ('initiators', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('targets', 'vim.cluster.VsanIscsiTargetBasicInfo[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.DiskUnhealthIssue', 'VsanDiskUnhealthIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanDiskFormatConversionSpec', 'VsanDiskFormatConversionSpec', 'vmodl.DynamicData', 'vim.version.version10', [('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('dataEncryptionConfig', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('skipHostRemediation', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostCimProviderInfo', 'VsanHostCimProviderInfo', 'vmodl.DynamicData', 'vim.version.version9', [('cimProviderSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('installedCIMProvider', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cimProviderOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('cimProviderLinksOnHcl', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetAuthSpec', 'VsanIscsiTargetAuthSpec', 'vmodl.DynamicData', 'vim.version.version11', [('authType', 'vim.cluster.VsanIscsiTargetAuthType', 'vim.version.version11', 0 | F_OPTIONAL), ('userNameAttachToTarget', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('userSecretAttachToTarget', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('userNameAttachToInitiator', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('userSecretAttachToInitiator', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataEncryptionConfig', 'VsanDataEncryptionConfig', 'vmodl.DynamicData', 'vsan.version.version3', [('encryptionEnabled', 'boolean', 'vsan.version.version3', 0), ('kmsProviderId', 'vim.encryption.KeyProviderId', 'vsan.version.version3', 0 | F_OPTIONAL), ('kekId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('hostKeyId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('dekGenerationId', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('changing', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('eraseDisksBeforeUse', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanKmsHealth', 'VsanKmsHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('serverName', 'string', 'vsan.version.version3', 0), ('health', 'string', 'vsan.version.version3', 0), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL), ('trustHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('certHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('certExpireDate', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanResourceHealth', 'VsanResourceHealth', 'vmodl.DynamicData', 'vim.version.version9', [('resource', 'string', 'vim.version.version9', 0), ('health', 'string', 'vim.version.version9', 0), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANStretchedClusterFaultDomainConfig', 'VimClusterVSANStretchedClusterFaultDomainConfig', 'vmodl.DynamicData', 'vim.version.version10', [('firstFdName', 'string', 'vim.version.version10', 0), ('firstFdHosts', 'vim.HostSystem[]', 'vim.version.version10', 0), ('secondFdName', 'string', 'vim.version.version10', 0), ('secondFdHosts', 'vim.HostSystem[]', 'vim.version.version10', 0)])
CreateDataType('vim.host.VsanDiskEncryptionHealth', 'VsanDiskEncryptionHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('diskHealth', 'vim.host.VsanPhysicalDiskHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptionIssues', 'vim.host.VsanEncryptionIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.RuntimeStatsHostMap', 'VsanRuntimeStatsHostMap', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('stats', 'vim.vsan.host.RuntimeStats', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthConfigs', 'VsanClusterHealthConfigs', 'vmodl.DynamicData', 'vim.version.version9', [('enableVsanTelemetry', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanTelemetryInterval', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanTelemetryProxy', 'vim.cluster.VsanClusterTelemetryProxyConfig', 'vim.version.version9', 0 | F_OPTIONAL), ('configs', 'vim.cluster.VsanClusterHealthResultKeyValuePair[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectIdentityAndHealth', 'VsanObjectIdentityAndHealth', 'vmodl.DynamicData', 'vim.version.version9', [('identities', 'vim.cluster.VsanObjectIdentity[]', 'vim.version.version9', 0 | F_OPTIONAL), ('health', 'vim.host.VsanObjectOverallHealth', 'vim.version.version9', 0 | F_OPTIONAL), ('spaceSummary', 'vim.cluster.VsanObjectSpaceSummary[]', 'vim.version.version9', 0 | F_OPTIONAL), ('rawData', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultTable', 'VsanClusterHealthResultTable', 'vim.cluster.VsanClusterHealthResultBase', 'vim.version.version9', [('columns', 'vim.cluster.VsanClusterHealthResultColumnInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('rows', 'vim.cluster.VsanClusterHealthResultRow[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.StorageOperationalStatus', 'VsanStorageOperationalStatus', 'vmodl.DynamicData', 'vim.version.version9', [('healthy', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('operationETA', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('operationProgress', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('transitional', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcPostDeployConfigSpec', 'VsanVcPostDeployConfigSpec', 'vmodl.DynamicData', 'vim.version.version11', [('dcName', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('clusterName', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('firstHost', 'vim.host.ConnectSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('hostsToAdd', 'vim.host.ConnectSpec[]', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanDataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanLicenseKey', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('hostLicenseKey', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('taskId', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanSpaceUsage', 'VsanSpaceUsage', 'vmodl.DynamicData', 'vim.version.version9', [('totalCapacityB', 'long', 'vim.version.version9', 0), ('freeCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('spaceOverview', 'vim.cluster.VsanObjectSpaceSummary', 'vim.version.version9', 0 | F_OPTIONAL), ('spaceDetail', 'vim.cluster.VsanSpaceUsageDetailResult', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclDiskInfo', 'VsanHclDiskInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('deviceName', 'string', 'vsan.version.version3', 0), ('model', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('isSsd', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('vsanDisk', 'boolean', 'vsan.version.version3', 0), ('issues', 'vmodl.MethodFault[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('remediableIssues', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanNetworkConfigVsanNotOnVdsIssue', 'VsanNetworkConfigVsanNotOnVdsIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vmknic', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanClusterProactiveTestResult', 'VsanClusterProactiveTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('overallStatus', 'string', 'vim.version.version9', 0), ('overallStatusDescription', 'string', 'vim.version.version9', 0), ('timestamp', 'vmodl.DateTime', 'vim.version.version9', 0), ('healthTest', 'vim.cluster.VsanClusterHealthTest', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanHostCapability', 'VimVsanHostVsanHostCapability', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('isSupported', 'boolean', 'vim.version.version10', 0), ('isLicensed', 'boolean', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanPerfThreshold', 'VsanPerfThreshold', 'vmodl.DynamicData', 'vim.version.version9', [('direction', 'vim.cluster.VsanPerfThresholdDirectionType', 'vim.version.version9', 0), ('yellow', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('red', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanSmartDiskStats', 'VsanSmartDiskStats', 'vmodl.DynamicData', 'vsan.version.version3', [('disk', 'string', 'vsan.version.version3', 0), ('stats', 'vim.host.VsanSmartParameter[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterVMsHealthOverallResult', 'VsanClusterVMsHealthOverallResult', 'vmodl.DynamicData', 'vim.version.version9', [('healthStateList', 'vim.cluster.VsanClusterVMsHealthSummaryResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('overallHealthState', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostHealthSystemStatusResult', 'VsanHostHealthSystemStatusResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('status', 'string', 'vim.version.version9', 0), ('issues', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterAdvCfgSyncResult', 'VsanClusterAdvCfgSyncResult', 'vmodl.DynamicData', 'vim.version.version9', [('inSync', 'boolean', 'vim.version.version9', 0), ('name', 'string', 'vim.version.version9', 0), ('hostValues', 'vim.cluster.VsanClusterAdvCfgSyncHostResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanQueryResultHostInfo', 'VsanQueryResultHostInfo', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('hostnameInCmmds', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanIpv4Addresses', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthSummary', 'VsanClusterHealthSummary', 'vmodl.DynamicData', 'vim.version.version9', [('clusterStatus', 'vim.cluster.VsanClusterHealthSystemStatusResult', 'vim.version.version9', 0 | F_OPTIONAL), ('timestamp', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('clusterVersions', 'vim.cluster.VsanClusterHealthSystemVersionResult', 'vim.version.version9', 0 | F_OPTIONAL), ('objectHealth', 'vim.host.VsanObjectOverallHealth', 'vim.version.version9', 0 | F_OPTIONAL), ('vmHealth', 'vim.cluster.VsanClusterVMsHealthOverallResult', 'vim.version.version9', 0 | F_OPTIONAL), ('networkHealth', 'vim.cluster.VsanClusterNetworkHealthResult', 'vim.version.version9', 0 | F_OPTIONAL), ('limitHealth', 'vim.cluster.VsanClusterLimitHealthResult', 'vim.version.version9', 0 | F_OPTIONAL), ('advCfgSync', 'vim.cluster.VsanClusterAdvCfgSyncResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('createVmHealth', 'vim.cluster.VsanHostCreateVmHealthTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('physicalDisksHealth', 'vim.host.VsanPhysicalDiskHealthSummary[]', 'vim.version.version9', 0 | F_OPTIONAL), ('encryptionHealth', 'vim.cluster.VsanClusterEncryptionHealthSummary', 'vsan.version.version3', 0 | F_OPTIONAL), ('hclInfo', 'vim.cluster.VsanClusterHclInfo', 'vim.version.version9', 0 | F_OPTIONAL), ('groups', 'vim.cluster.VsanClusterHealthGroup[]', 'vim.version.version9', 0 | F_OPTIONAL), ('overallHealth', 'string', 'vim.version.version9', 0), ('overallHealthDescription', 'string', 'vim.version.version9', 0), ('clomdLiveness', 'vim.cluster.VsanClusterClomdLivenessResult', 'vim.version.version9', 0 | F_OPTIONAL), ('diskBalance', 'vim.cluster.VsanClusterBalanceSummary', 'vim.version.version9', 0 | F_OPTIONAL), ('genericCluster', 'vim.vsan.VsanGenericClusterBestPracticeHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('networkConfig', 'vim.vsan.VsanNetworkConfigBestPracticeHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('vsanConfig', 'vim.vsan.VsanConfigCheckResult', 'vsan.version.version3', 0 | F_OPTIONAL), ('burnInTest', 'vim.vsan.VsanBurnInTestCheckResult', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfEntityType', 'VsanPerfEntityType', 'vmodl.DynamicData', 'vim.version.version9', [('name', 'string', 'vim.version.version9', 0), ('id', 'string', 'vim.version.version9', 0), ('graphs', 'vim.cluster.VsanPerfGraph[]', 'vim.version.version9', 0), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanNetworkLoadTestResult', 'VsanNetworkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('status', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('client', 'boolean', 'vim.version.version9', 0), ('bandwidthBps', 'long', 'vim.version.version9', 0), ('totalBytes', 'long', 'vim.version.version9', 0), ('lostDatagrams', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('lossPct', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('sentDatagrams', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('jitterMs', 'float', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanPhysicalDiskHealthSummary', 'VsanPhysicalDiskHealthSummary', 'vmodl.DynamicData', 'vim.version.version9', [('overallHealth', 'string', 'vim.version.version9', 0), ('heapsWithIssues', 'vim.host.VsanResourceHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('slabsWithIssues', 'vim.host.VsanResourceHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('disks', 'vim.host.VsanPhysicalDiskHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('componentsWithIssues', 'vim.host.VsanResourceHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('hostDedupScope', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanNetworkConfigBaseIssue', 'VsanNetworkConfigBaseIssue', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.vsan.host.VsanWhatIfEvacResult', 'VsanWhatIfEvacResult', 'vmodl.DynamicData', 'vsan.version.version3', [('noAction', 'vim.vsan.host.VsanWhatIfEvacDetail', 'vsan.version.version3', 0), ('ensureAccess', 'vim.vsan.host.VsanWhatIfEvacDetail', 'vsan.version.version3', 0), ('evacAllData', 'vim.vsan.host.VsanWhatIfEvacDetail', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanVdsPgMigrationVmInfo', 'VsanVdsPgMigrationVmInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('vm', 'vim.VirtualMachine', 'vsan.version.version3', 0), ('vnicLabel', 'string[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.ConfigInfoEx', 'VsanConfigInfoEx', 'vim.vsan.cluster.ConfigInfo', 'vim.version.version10', [('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('resyncIopsLimitConfig', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('iscsiConfig', 'vim.cluster.VsanIscsiTargetServiceConfig', 'vim.version.version11', 0 | F_OPTIONAL), ('dataEncryptionConfig', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterLimitHealthResult', 'VsanClusterLimitHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('issueFound', 'boolean', 'vim.version.version9', 0), ('componentLimitHealth', 'string', 'vim.version.version9', 0), ('diskFreeSpaceHealth', 'string', 'vim.version.version9', 0), ('rcFreeReservationHealth', 'string', 'vim.version.version9', 0), ('hostResults', 'vim.host.VsanLimitHealthResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('whatifHostFailures', 'vim.cluster.VsanClusterWhatifHostFailuresResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsCommFailure', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterAdvCfgSyncHostResult', 'VsanClusterAdvCfgSyncHostResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('value', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.host.VsanProactiveRebalanceInfoEx', 'VsanProactiveRebalanceInfoEx', 'vmodl.DynamicData', 'vim.version.version9', [('running', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('startTs', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('stopTs', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('varianceThreshold', 'float', 'vim.version.version9', 0 | F_OPTIONAL), ('timeThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('rateThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataEfficiencyConfig', 'VsanDataEfficiencyConfig', 'vmodl.DynamicData', 'vim.version.version10', [('dedupEnabled', 'boolean', 'vim.version.version10', 0), ('compressionEnabled', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectQuerySpec', 'VsanObjectQuerySpec', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0), ('spbmProfileGenerationId', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFaultDomainsConfigSpec', 'VimClusterVsanFaultDomainsConfigSpec', 'vmodl.DynamicData', 'vim.version.version10', [('faultDomains', 'vim.cluster.VsanFaultDomainSpec[]', 'vim.version.version10', 0), ('witness', 'vim.cluster.VsanWitnessSpec', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclFirmwareFile', 'VsanHclFirmwareFile', 'vmodl.DynamicData', 'vsan.version.version3', [('fileType', 'string', 'vsan.version.version3', 0), ('filenameOrUrl', 'string', 'vsan.version.version3', 0), ('sha1sum', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanPerfDiagnosticException', 'VsanPerfDiagnosticException', 'vmodl.DynamicData', 'vsan.version.version3', [('exceptionId', 'string', 'vsan.version.version3', 0), ('exceptionMessage', 'string', 'vsan.version.version3', 0), ('exceptionDetails', 'string', 'vsan.version.version3', 0), ('exceptionUrl', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.upgradesystem.UnknownScanIssue', 'VsanUnknownScanIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version11', [('uuids', 'string[]', 'vim.version.version11', 0)])
CreateDataType('vim.cluster.VsanClusterHostVmknicMapping', 'VsanClusterHostVmknicMapping', 'vmodl.DynamicData', 'vim.version.version9', [('host', 'string', 'vim.version.version9', 0), ('vmknic', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanClusterVmdkLoadTestResult', 'VsanClusterVmdkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('task', 'vim.Task', 'vim.version.version9', 0 | F_OPTIONAL), ('clusterResult', 'vim.cluster.VsanClusterProactiveTestResult', 'vim.version.version9', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanHostVmdkLoadTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanStorageWorkloadType', 'VsanStorageWorkloadType', 'vmodl.DynamicData', 'vim.version.version9', [('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0), ('typeId', 'string', 'vim.version.version9', 0), ('name', 'string', 'vim.version.version9', 0), ('description', 'string', 'vim.version.version9', 0), ('duration', 'long', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfQuerySpec', 'VsanPerfQuerySpec', 'vmodl.DynamicData', 'vim.version.version9', [('entityRefId', 'string', 'vim.version.version9', 0), ('startTime', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('endTime', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('group', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('labels', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('interval', 'int', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VSANStretchedClusterHostCapability', 'VimHostVSANStretchedClusterHostCapability', 'vmodl.DynamicData', 'vim.version.version10', [('featureVersion', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.host.VsanFailedRepairObjectResult', 'VsanFailedRepairObjectResult', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0), ('errMessage', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterCreateVmHealthTestResult', 'VsanClusterCreateVmHealthTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('clusterResult', 'vim.cluster.VsanClusterProactiveTestResult', 'vim.version.version9', 0), ('hostResults', 'vim.cluster.VsanHostCreateVmHealthTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterBalanceSummary', 'VsanClusterBalanceSummary', 'vmodl.DynamicData', 'vim.version.version9', [('varianceThreshold', 'long', 'vim.version.version9', 0), ('disks', 'vim.cluster.VsanClusterBalancePerDiskInfo[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanConfigGeneration', 'VsanConfigGeneration', 'vmodl.DynamicData', 'vsan.version.version4', [('vcUuid', 'string', 'vsan.version.version4', 0), ('genNum', 'long', 'vsan.version.version4', 0), ('genTime', 'long', 'vsan.version.version4', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigBestPracticeHealth', 'VsanNetworkConfigBestPracticeHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('vdsPresent', 'boolean', 'vsan.version.version3', 0), ('issues', 'vim.vsan.VsanNetworkConfigBaseIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanPhysicalDiskHealth', 'VsanPhysicalDiskHealth', 'vmodl.DynamicData', 'vim.version.version9', [('name', 'string', 'vim.version.version9', 0), ('uuid', 'string', 'vim.version.version9', 0), ('inCmmds', 'boolean', 'vim.version.version9', 0), ('inVsi', 'boolean', 'vim.version.version9', 0), ('dedupScope', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('formatVersion', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('isAllFlash', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('congestionValue', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('congestionArea', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('congestionHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('metadataHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('operationalHealthDescription', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('operationalHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('dedupUsageHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('capacityHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('summaryHealth', 'string', 'vim.version.version9', 0), ('capacity', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('usedCapacity', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('reservedCapacity', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('totalBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('freeBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('hashedBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('dedupedBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('scsiDisk', 'vim.host.ScsiDisk', 'vim.version.version9', 0 | F_OPTIONAL), ('usedComponents', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('maxComponents', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('compLimitHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('encryptionEnabled', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsProviderId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kekId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('dekGenerationId', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptedUnlocked', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('rebalanceResult', 'vim.host.VsanDiskRebalanceResult', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.StorageComplianceResult', 'VsanStorageComplianceResult', 'vmodl.DynamicData', 'vim.version.version9', [('checkTime', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('profile', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('objectUUID', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('complianceStatus', 'vim.cluster.StorageComplianceStatus', 'vim.version.version9', 0), ('mismatch', 'boolean', 'vim.version.version9', 0), ('violatedPolicies', 'vim.cluster.StoragePolicyStatus[]', 'vim.version.version9', 0 | F_OPTIONAL), ('operationalStatus', 'vim.cluster.StorageOperationalStatus', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetCommonInfo', 'VsanIscsiTargetCommonInfo', 'vim.cluster.VsanIscsiTargetBasicInfo', 'vim.version.version11', [('authSpec', 'vim.cluster.VsanIscsiTargetAuthSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('port', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('networkInterface', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanSmartParameter', 'VsanSmartParameter', 'vmodl.DynamicData', 'vsan.version.version3', [('parameter', 'vim.host.VsanSmartParameterType', 'vsan.version.version3', 0 | F_OPTIONAL), ('value', 'int', 'vsan.version.version3', 0 | F_OPTIONAL), ('threshold', 'int', 'vsan.version.version3', 0 | F_OPTIONAL), ('worst', 'int', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHclInfo', 'VsanClusterHclInfo', 'vmodl.DynamicData', 'vim.version.version9', [('hclDbLastUpdate', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('hclDbAgeHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanHostHclInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('updateItems', 'vim.vsan.VsanUpdateItem[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultBase', 'VsanClusterHealthResultBase', 'vmodl.DynamicData', 'vim.version.version9', [('label', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfDiagnosticResult', 'VsanPerfDiagnosticResult', 'vmodl.DynamicData', 'vsan.version.version3', [('exceptionId', 'string', 'vsan.version.version3', 0), ('recommendation', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('aggregationFunction', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('aggregationData', 'vim.cluster.VsanPerfEntityMetricCSV', 'vsan.version.version3', 0 | F_OPTIONAL), ('exceptionData', 'vim.cluster.VsanPerfEntityMetricCSV[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigVdsScopeIssue', 'VsanNetworkConfigVdsScopeIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0), ('memberHosts', 'vim.HostSystem[]', 'vsan.version.version3', 0), ('nonMemberHosts', 'vim.HostSystem[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanHclDriverInfo', 'VsanHclDriverInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('driverVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('driverLink', 'vim.vsan.VsanDownloadItem', 'vsan.version.version3', 0 | F_OPTIONAL), ('fwVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('fwLinks', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('toolsLinks', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('eula', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfTopEntity', 'VsanPerfTopEntity', 'vmodl.DynamicData', 'vim.version.version9', [('entityRefId', 'string', 'vim.version.version9', 0), ('value', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.vsan.upgradesystem.MixedEsxVersionIssue', 'VsanMixedEsxVersionIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [])
CreateDataType('vim.VsanMassCollectorSpec', 'VsanMassCollectorSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('objects', 'vmodl.ManagedObject[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('objectCollection', 'vim.VsanMassCollectorObjectCollectionEnum', 'vsan.version.version3', 0 | F_OPTIONAL), ('properties', 'string[]', 'vsan.version.version3', 0), ('propertiesParams', 'vim.VsanMassCollectorPropertyParams[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('constraint', 'vim.VsanResourceConstraint', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanConfigNotAllDisksClaimedIssue', 'VsanConfigNotAllDisksClaimedIssue', 'vim.vsan.VsanConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('disks', 'string[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.host.IpConfigEx', 'VsanHostIpConfigEx', 'vim.vsan.host.IpConfig', 'vim.version.version11', [('upstreamIpV6Address', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('downstreamIpV6Address', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthTest', 'VsanClusterHealthTest', 'vmodl.DynamicData', 'vim.version.version9', [('testId', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testDescription', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testShortDescription', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testDetails', 'vim.cluster.VsanClusterHealthResultBase[]', 'vim.version.version9', 0 | F_OPTIONAL), ('testActions', 'vim.cluster.VsanClusterHealthAction[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.EncryptionInfo', 'VsanHostEncryptionInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('enabled', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('kekId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('hostKeyId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmipServers', 'vim.encryption.KmipServerSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsServerCerts', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('clientKey', 'string', 'vsan.version.version3', 0 | F_OPTIONAL | F_SECRET), ('clientCert', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('dekGenerationId', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('changing', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('eraseDisksBeforeUse', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHealthExtMgmtPreCheckResult', 'VsanHealthExtMgmtPreCheckResult', 'vmodl.DynamicData', 'vim.version.version9', [('overallResult', 'boolean', 'vim.version.version9', 0), ('esxVersionCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('drsCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('eamConnectionCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('installStateCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('results', 'vim.cluster.VsanClusterHealthTest[]', 'vim.version.version9', 0), ('vumRegistered', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterClomdLivenessResult', 'VsanClusterClomdLivenessResult', 'vmodl.DynamicData', 'vim.version.version9', [('clomdLivenessResult', 'vim.cluster.VsanHostClomdLivenessResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0)])
CreateDataType('vim.vsan.upgradesystem.HostWithHybridDiskgroupIssue', 'VsanHostWithHybridDiskgroupIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('hosts', 'vim.HostSystem[]', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanPerfMetricSeriesCSV', 'VsanPerfMetricSeriesCSV', 'vmodl.DynamicData', 'vim.version.version9', [('metricId', 'vim.cluster.VsanPerfMetricId', 'vim.version.version9', 0), ('threshold', 'vim.cluster.VsanPerfThreshold', 'vsan.version.version3', 0 | F_OPTIONAL), ('values', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanRepairObjectsResult', 'VsanRepairObjectsResult', 'vmodl.DynamicData', 'vim.version.version9', [('inQueueObjects', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('failedRepairObjects', 'vim.host.VsanFailedRepairObjectResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('notInQueueObjects', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterVMsHealthSummaryResult', 'VsanClusterVMsHealthSummaryResult', 'vmodl.DynamicData', 'vim.version.version9', [('numVMs', 'int', 'vim.version.version9', 0), ('state', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('health', 'string', 'vim.version.version9', 0), ('vmInstanceUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.AboutInfoEx', 'VsanHostAboutInfoEx', 'vmodl.DynamicData', 'vsan.version.version3', [('name', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('version', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('build', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('buildType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVmVdsMigrationSpec', 'VsanVmVdsMigrationSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('vmInstanceUuid', 'string', 'vsan.version.version3', 0), ('vnics', 'vim.vsan.VsanVnicVdsMigrationSpec[]', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanPerfMasterInformation', 'VsanPerfMasterInformation', 'vmodl.DynamicData', 'vim.version.version9', [('secSinceLastStatsWrite', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('secSinceLastStatsCollect', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('statsIntervalSec', 'long', 'vim.version.version9', 0), ('collectionFailureHostUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('renamedStatsDirectories', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('statsDirectoryPercentFree', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('verboseMode', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('verboseModeLastUpdate', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHostCreateVmHealthTestResult', 'VsanHostCreateVmHealthTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('state', 'string', 'vim.version.version9', 0), ('fault', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanResourceConstraint', 'VsanResourceConstraint', 'vmodl.DynamicData', 'vsan.version.version3', [('targetType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanDownloadItem', 'VsanDownloadItem', 'vmodl.DynamicData', 'vsan.version.version3', [('url', 'string', 'vsan.version.version3', 0), ('sha1sum', 'string', 'vsan.version.version3', 0), ('formatType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcsaDeploymentProgress', 'VsanVcsaDeploymentProgress', 'vmodl.DynamicData', 'vim.version.version11', [('phase', 'vim.vsan.VsanVcsaDeploymentPhase', 'vim.version.version11', 0), ('progressPct', 'long', 'vim.version.version11', 0), ('message', 'string', 'vim.version.version11', 0), ('success', 'boolean', 'vim.version.version11', 0), ('error', 'vmodl.MethodFault', 'vim.version.version11', 0 | F_OPTIONAL), ('updateCounter', 'long', 'vim.version.version11', 0), ('taskId', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('vm', 'vim.VirtualMachine', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostHclInfo', 'VsanHostHclInfo', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('hclChecked', 'boolean', 'vim.version.version9', 0), ('releaseName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL), ('controllers', 'vim.host.VsanHclControllerInfo[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANStretchedClusterCapability', 'VimClusterVSANStretchedClusterCapability', 'vmodl.DynamicData', 'vim.version.version10', [('hostMoId', 'string', 'vim.version.version10', 0), ('connStatus', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('isSupported', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL), ('hostCapability', 'vim.host.VSANStretchedClusterHostCapability', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanDiskMappingsConfigSpec', 'VimClusterVsanDiskMappingsConfigSpec', 'vmodl.DynamicData', 'vim.version.version10', [('hostDiskMappings', 'vim.cluster.VsanHostDiskMapping[]', 'vim.version.version10', 0)])
CreateDataType('vim.host.VsanHostVmdkLoadTestResult', 'VsanHostVmdkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('issueFound', 'boolean', 'vim.version.version9', 0), ('faultMessage', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vmdkResults', 'vim.host.VsanVmdkLoadTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanNetworkPeerHealthResult', 'VsanNetworkPeerHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('peer', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('peerHostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('peerVmknicName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('smallPingTestSuccessPct', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('largePingTestSuccessPct', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('maxLatencyUs', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('onSameIpSubnet', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('sourceVmknicName', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetBasicInfo', 'VsanIscsiTargetBasicInfo', 'vmodl.DynamicData', 'vim.version.version11', [('alias', 'string', 'vim.version.version11', 0), ('iqn', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanNetworkConfigVswitchWithNoRedundancyIssue', 'VsanNetworkConfigVswitchWithNoRedundancyIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0 | F_OPTIONAL), ('numPnics', 'long', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanWitnessSpec', 'VimClusterVsanWitnessSpec', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('preferredFaultDomainName', 'string', 'vim.version.version10', 0), ('diskMapping', 'vim.vsan.host.DiskMapping', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVumSystemConfig', 'VsanVumSystemConfig', 'vmodl.DynamicData', 'vsan.version.version4', [('enabled', 'boolean', 'vsan.version.version4', 0 | F_OPTIONAL), ('autoCheckInterval', 'int', 'vsan.version.version4', 0 | F_OPTIONAL), ('metadataUpdateInterval', 'int', 'vsan.version.version4', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanConfigBaseIssue', 'VsanConfigBaseIssue', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.host.VsanSmartStatsHostSummary', 'VsanSmartStatsHostSummary', 'vmodl.DynamicData', 'vsan.version.version3', [('hostname', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('smartStats', 'vim.host.VsanSmartDiskStats[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiLUNCommonInfo', 'VsanIscsiLUNCommonInfo', 'vmodl.DynamicData', 'vim.version.version11', [('lunId', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('alias', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('lunSize', 'long', 'vim.version.version11', 0), ('status', 'vim.cluster.VsanIscsiLUNStatus', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanClusterBurnInTestResultList', 'VsanClusterBurnInTestResultList', 'vmodl.DynamicData', 'vsan.version.version3', [('items', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('hosts', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVsanClusterPcapGroup', 'VsanVsanClusterPcapGroup', 'vmodl.DynamicData', 'vim.version.version9', [('master', 'string', 'vim.version.version9', 0), ('members', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanMassCollectorPropertyParams', 'VsanMassCollectorPropertyParams', 'vmodl.DynamicData', 'vsan.version.version3', [('propertyName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('propertyParams', 'vmodl.KeyAnyValue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostVirtualApplianceInfo', 'VsanHostVirtualApplianceInfo', 'vmodl.DynamicData', 'vim.version.version11', [('hostKey', 'vim.HostSystem', 'vim.version.version11', 0), ('isVirtualApp', 'boolean', 'vim.version.version11', 0)])
CreateDataType('vim.cluster.VsanPerfNodeInformation', 'VsanPerfNodeInformation', 'vmodl.DynamicData', 'vim.version.version9', [('version', 'string', 'vim.version.version9', 0), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL), ('isCmmdsMaster', 'boolean', 'vim.version.version9', 0), ('isStatsMaster', 'boolean', 'vim.version.version9', 0), ('vsanMasterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanNodeUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('masterInfo', 'vim.cluster.VsanPerfMasterInformation', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfEntityMetricCSV', 'VsanPerfEntityMetricCSV', 'vmodl.DynamicData', 'vim.version.version9', [('entityRefId', 'string', 'vim.version.version9', 0), ('sampleInfo', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('value', 'vim.cluster.VsanPerfMetricSeriesCSV[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfTopEntities', 'VsanPerfTopEntities', 'vmodl.DynamicData', 'vim.version.version9', [('metricId', 'vim.cluster.VsanPerfMetricId', 'vim.version.version9', 0), ('entities', 'vim.cluster.VsanPerfTopEntity[]', 'vim.version.version9', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigPnicSpeedInconsistencyIssue', 'VsanNetworkConfigPnicSpeedInconsistencyIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0 | F_OPTIONAL), ('speedsMb', 'long[]', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanIscsiLUNSpec', 'VsanIscsiLUNSpec', 'vim.cluster.VsanIscsiLUNCommonInfo', 'vim.version.version11', [('storagePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('newLunId', 'int', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanUpdateItem', 'VsanUpdateItem', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('type', 'vim.vsan.VsanUpdateItemType', 'vsan.version.version3', 0), ('name', 'string', 'vsan.version.version3', 0), ('version', 'string', 'vsan.version.version3', 0), ('existingVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('present', 'boolean', 'vsan.version.version3', 0), ('vibSpec', 'vim.vsan.VsanVibSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('firmwareSpec', 'vim.host.VsanHclFirmwareUpdateSpec', 'vsan.version.version3', 0 | F_OPTIONAL), ('downloadInfo', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('eula', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('adapter', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.ObjectInaccessibleIssue', 'VsanObjectInaccessibleIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanClusterHealthAction', 'VsanClusterHealthAction', 'vmodl.DynamicData', 'vim.version.version9', [('actionId', 'vim.cluster.VsanClusterHealthActionIdEnum', 'vim.version.version9', 0), ('actionLabel', 'vmodl.LocalizableMessage', 'vim.version.version9', 0), ('actionDescription', 'vmodl.LocalizableMessage', 'vim.version.version9', 0), ('enabled', 'boolean', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanClusterHealthSystemVersionResult', 'VsanClusterHealthSystemVersionResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostResults', 'vim.cluster.VsanHostHealthSystemVersionResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('vcVersion', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0), ('upgradePossible', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultRow', 'VsanClusterHealthResultRow', 'vmodl.DynamicData', 'vim.version.version9', [('values', 'string[]', 'vim.version.version9', 0), ('nestedRows', 'vim.cluster.VsanClusterHealthResultRow[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthSystemStatusResult', 'VsanClusterHealthSystemStatusResult', 'vmodl.DynamicData', 'vim.version.version9', [('status', 'string', 'vim.version.version9', 0), ('goalState', 'string', 'vim.version.version9', 0), ('untrackedHosts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('trackedHostsStatus', 'vim.host.VsanHostHealthSystemStatusResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHostDiskMapping', 'VimClusterVsanHostDiskMapping', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('cacheDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0 | F_OPTIONAL), ('capacityDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0), ('type', 'vim.cluster.VsanDiskGroupCreationType', 'vim.version.version10', 0)])
CreateDataType('vim.VsanCompositeConstraint', 'VsanCompositeConstraint', 'vim.VsanResourceConstraint', 'vsan.version.version3', [('nestedConstraints', 'vim.VsanResourceConstraint[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('conjoiner', 'vim.VsanCompositeConstraintConjoinerEnum', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterWhatifHostFailuresResult', 'VsanClusterWhatifHostFailuresResult', 'vmodl.DynamicData', 'vim.version.version9', [('numFailures', 'long', 'vim.version.version9', 0), ('totalUsedCapacityB', 'long', 'vim.version.version9', 0), ('totalCapacityB', 'long', 'vim.version.version9', 0), ('totalRcReservationB', 'long', 'vim.version.version9', 0), ('totalRcSizeB', 'long', 'vim.version.version9', 0), ('usedComponents', 'long', 'vim.version.version9', 0), ('totalComponents', 'long', 'vim.version.version9', 0), ('componentLimitHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('diskFreeSpaceHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('rcFreeReservationHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTarget', 'VsanIscsiTarget', 'vim.cluster.VsanIscsiTargetCommonInfo', 'vim.version.version11', [('lunCount', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('objectInformation', 'vim.cluster.VsanObjectInformation', 'vim.version.version11', 0 | F_OPTIONAL), ('ioOwnerHost', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('initiators', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('initiatorGroups', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetServiceSpec', 'VsanIscsiTargetServiceSpec', 'vim.cluster.VsanIscsiTargetServiceConfig', 'vim.version.version11', [('homeObjectStoragePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.fault.VsanNodeNotMaster', 'VsanNodeNotMaster', 'vim.fault.VimFault', 'vim.version.version9', [('vsanMasterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cmmdsMasterButNotStatsMaster', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHostHealthSystemVersionResult', 'VsanHostHealthSystemVersionResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('version', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclControllerInfo', 'VsanHclControllerInfo', 'vmodl.DynamicData', 'vim.version.version9', [('deviceName', 'string', 'vim.version.version9', 0), ('deviceDisplayName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('driverName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('driverVersion', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vendorId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('deviceId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('subVendorId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('subDeviceId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('extraInfo', 'vim.KeyValue[]', 'vim.version.version9', 0 | F_OPTIONAL), ('deviceOnHcl', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('releaseSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('releasesOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('driverVersionsOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('driverVersionSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('fwVersionSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('fwVersionOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('cacheConfigSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('cacheConfigOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('raidConfigSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('raidConfigOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('fwVersion', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('raidConfig', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cacheConfig', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cimProviderInfo', 'vim.host.VsanHostCimProviderInfo', 'vim.version.version9', 0 | F_OPTIONAL), ('usedByVsan', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('disks', 'vim.host.VsanHclDiskInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('issues', 'vmodl.MethodFault[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('remediableIssues', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('driversOnHcl', 'vim.vsan.VsanHclDriverInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('fwAuxVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('queueDepth', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('queueDepthOnHcl', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('queueDepthSupported', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskMode', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskModeOnHcl', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskModeSupported', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANStretchedClusterHostVirtualApplianceStatus', 'VSANStretchedClusterHostVirtualApplianceStatus', 'vmodl.DynamicData', 'vim.version.version11', [('vcCluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0 | F_OPTIONAL), ('isVirtualApp', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVibScanResult', 'VsanVibScanResult', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vibName', 'string', 'vsan.version.version3', 0), ('vibVersion', 'string', 'vsan.version.version3', 0), ('existingVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('maintenanceModeRequired', 'boolean', 'vsan.version.version3', 0), ('rebootRequired', 'boolean', 'vsan.version.version3', 0), ('meetsSystemReq', 'boolean', 'vsan.version.version3', 0), ('pkgDepsMetByHost', 'boolean', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanClusterHealthCheckInfo', 'VsanClusterHealthCheckInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('testId', 'string', 'vsan.version.version3', 0), ('testName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('groupId', 'string', 'vsan.version.version3', 0), ('groupName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultKeyValuePair', 'VsanClusterHealthResultKeyValuePair', 'vmodl.DynamicData', 'vim.version.version9', [('key', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('value', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanCapability', 'VsanCapability', 'vmodl.DynamicData', 'vim.version.version10', [('target', 'vmodl.ManagedObject', 'vim.version.version10', 0 | F_OPTIONAL), ('capabilities', 'string[]', 'vim.version.version10', 0 | F_OPTIONAL), ('statuses', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanGenericClusterBaseIssue', 'VsanGenericClusterBaseIssue', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.cluster.VsanClusterConfig', 'VsanClusterConfig', 'vmodl.DynamicData', 'vim.version.version9', [('config', 'vim.vsan.cluster.ConfigInfo', 'vim.version.version9', 0), ('name', 'string', 'vim.version.version9', 0), ('hosts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('toBeDeleted', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostReference', 'VsanHostReference', 'vmodl.DynamicData', 'vsan.version.version3', [('hostname', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanIscsiHomeObjectSpec', 'VsanIscsiHomeObjectSpec', 'vmodl.DynamicData', 'vim.version.version11', [('storagePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('defaultConfig', 'vim.cluster.VsanIscsiTargetServiceDefaultConfigSpec', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanGenericClusterBestPracticeHealth', 'VsanGenericClusterBestPracticeHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('drsEnabled', 'boolean', 'vsan.version.version3', 0), ('haEnabled', 'boolean', 'vsan.version.version3', 0), ('issues', 'vim.vsan.VsanGenericClusterBaseIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterEncryptionHealthSummary', 'VsanClusterEncryptionHealthSummary', 'vmodl.DynamicData', 'vsan.version.version3', [('overallHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('configHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vcKmsResult', 'vim.cluster.VsanVcKmipServersHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanEncryptionHealthSummary[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVmdkLoadTestResult', 'VsanVmdkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('success', 'boolean', 'vim.version.version9', 0), ('faultMessage', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('spec', 'vim.host.VsanVmdkLoadTestSpec', 'vim.version.version9', 0), ('actualDurationSec', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('totalBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('iops', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('tputBps', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('avgLatencyUs', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('maxLatencyUs', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('numIoAboveLatencyThreshold', 'long', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.RuntimeStats', 'VsanHostRuntimeStats', 'vmodl.DynamicData', 'vsan.version.version3', [('resyncIopsInfo', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('configGeneration', 'vim.cluster.VsanConfigGeneration', 'vsan.version.version4', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfTimeRangeQuerySpec', 'VsanPerfTimeRangeQuerySpec', 'vmodl.DynamicData', 'vsan.version.version3', [('name', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('startTimeFrom', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('startTimeTo', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('endTimeFrom', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('endTimeTo', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.HigherObjectsPresentDuringDowngradeIssue', 'VsanHigherObjectsPresentDuringDowngradeIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.host.VsanDiskManagementSystemCapability', 'VimVsanHostVsanDiskManagementSystemCapability', 'vmodl.DynamicData', 'vim.version.version10', [('version', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanUpgradeStatusEx', 'VsanUpgradeStatusEx', 'vim.VsanUpgradeSystem.UpgradeStatus', 'vim.version.version11', [('isPrecheck', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL), ('precheckResult', 'vim.cluster.VsanDiskFormatConversionCheckResult', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectInformation', 'VsanObjectInformation', 'vmodl.DynamicData', 'vim.version.version9', [('directoryName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanObjectUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('policyAttributes', 'vim.KeyValue[]', 'vim.version.version9', 0 | F_OPTIONAL), ('spbmProfileUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('spbmProfileGenerationId', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('spbmComplianceResult', 'vim.cluster.StorageComplianceResult', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectIdentity', 'VsanObjectIdentity', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0), ('type', 'string', 'vim.version.version9', 0), ('vmInstanceUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vmNsObjectUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vm', 'vim.VirtualMachine', 'vim.version.version9', 0 | F_OPTIONAL), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVmdkIOLoadSpec', 'VsanVmdkIOLoadSpec', 'vmodl.DynamicData', 'vim.version.version9', [('readPct', 'int', 'vim.version.version9', 0), ('oio', 'int', 'vim.version.version9', 0), ('iosizeB', 'int', 'vim.version.version9', 0), ('dataSizeMb', 'long', 'vim.version.version9', 0), ('random', 'boolean', 'vim.version.version9', 0), ('startOffsetB', 'long', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHostClomdLivenessResult', 'VsanHostClomdLivenessResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('clomdStat', 'string', 'vim.version.version9', 0), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.ObjectPolicyIssue', 'VsanObjectPolicyIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.VsanVdsPgMigrationHostInfo', 'VsanVdsPgMigrationHostInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('hostname', 'string', 'vsan.version.version3', 0), ('vmknicDevices', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('vmVnics', 'vim.vsan.VsanVdsPgMigrationVmInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanPrepareVsanForVcsaSpec', 'VsanPrepareVsanForVcsaSpec', 'vmodl.DynamicData', 'vim.version.version11', [('vsanDiskMappingCreationSpec', 'vim.vsan.host.DiskMappingCreationSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanDataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version11', 0 | F_OPTIONAL), ('taskId', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.PortConfigEx', 'VsanHostPortConfigEx', 'vim.vsan.host.ConfigInfo.NetworkInfo.PortConfig', 'vim.version.version11', [('trafficTypes', 'vim.vsan.host.TrafficType[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVdsMigrationPlan', 'VsanVdsMigrationPlan', 'vmodl.DynamicData', 'vsan.version.version3', [('vdsSpec', 'vim.DistributedVirtualSwitch.CreateSpec', 'vsan.version.version3', 0), ('pgs', 'vim.vsan.VsanVdsPgMigrationSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('inaccessibleVms', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('infraVms', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanPropertyConstraint', 'VsanPropertyConstraint', 'vim.VsanResourceConstraint', 'vsan.version.version3', [('propertyName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('comparator', 'vim.VsanPropertyConstraintComparatorEnum', 'vsan.version.version3', 0 | F_OPTIONAL), ('comparableValue', 'vmodl.KeyAnyValue', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanDataObfuscationRule', 'VsanDataObfuscationRule', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.host.VsanObjectHealth', 'VsanObjectHealth', 'vmodl.DynamicData', 'vim.version.version9', [('numObjects', 'int', 'vim.version.version9', 0), ('health', 'vim.host.VsanObjectHealthState', 'vim.version.version9', 0), ('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVmdkLoadTestSpec', 'VsanVmdkLoadTestSpec', 'vmodl.DynamicData', 'vim.version.version9', [('vmdkCreateSpec', 'vim.VirtualDiskManager.FileBackedVirtualDiskSpec', 'vim.version.version9', 0 | F_OPTIONAL), ('vmdkIOSpec', 'vim.host.VsanVmdkIOLoadSpec', 'vim.version.version9', 0 | F_OPTIONAL), ('vmdkIOSpecSequence', 'vim.host.VsanVmdkIOLoadSpec[]', 'vim.version.version9', 0 | F_OPTIONAL), ('stepDurationSec', 'long', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterTelemetryProxyConfig', 'VsanClusterTelemetryProxyConfig', 'vmodl.DynamicData', 'vim.version.version9', [('host', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('port', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('user', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('password', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('autoDiscovered', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.ConfigInfoEx', 'VsanHostConfigInfoEx', 'vim.vsan.host.ConfigInfo', 'vsan.version.version3', [('encryptionInfo', 'vim.vsan.host.EncryptionInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('dataEfficiencyInfo', 'vim.vsan.DataEfficiencyConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('resyncIopsLimitInfo', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANPreferredFaultDomainInfo', 'VimClusterVSANPreferredFaultDomainInfo', 'vmodl.DynamicData', 'vim.version.version10', [('preferredFaultDomainName', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFaultDomainId', 'string', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVsanPcapResult', 'VsanVsanPcapResult', 'vmodl.DynamicData', 'vim.version.version9', [('calltime', 'float', 'vim.version.version9', 0), ('vmknic', 'string', 'vim.version.version9', 0), ('tcpdumpFilter', 'string', 'vim.version.version9', 0), ('snaplen', 'int', 'vim.version.version9', 0), ('pkts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('pcap', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanBurnInTestCheckResult', 'VsanBurnInTestCheckResult', 'vmodl.DynamicData', 'vsan.version.version3', [('passedTests', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('notPerformedTests', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('failedTests', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVibInstallPreflightStatus', 'VsanVibInstallPreflightStatus', 'vmodl.DynamicData', 'vsan.version.version3', [('manualVmotionRequired', 'boolean', 'vsan.version.version3', 0), ('rollingRequired', 'boolean', 'vsan.version.version3', 0)])
CreateDataType('vim.VsanRegexBasedRule', 'VsanRegexBasedRule', 'vmodl.DynamicData', 'vsan.version.version3', [('rules', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.HostPropertyRetrieveIssue', 'VsanHostPropertyRetrieveIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('hosts', 'vim.HostSystem[]', 'vim.version.version10', 0)])
CreateEnumType('vim.cluster.VsanPerfDiagnosticQueryType', 'VsanPerfDiagnosticQueryType', 'vsan.version.version3', ['tput' ,'iops' ,'lat' ,'eval' ,])
CreateEnumType('vim.VsanCompositeConstraintConjoinerEnum', 'VsanCompositeConstraintConjoinerEnum', 'vsan.version.version3', ['AND' ,'OR' ,'EXCEPT' ,])
CreateEnumType('vim.cluster.VsanObjectTypeEnum', 'VsanObjectTypeEnum', 'vim.version.version9', ['vmswap' ,'vdisk' ,'namespace' ,'vmem' ,'statsdb' ,'iscsiTarget' ,'iscsiLun' ,'other' ,'fileSystemOverhead' ,'dedupOverhead' ,'spaceUnderDedupConsideration' ,'checksumOverhead' ,])
CreateEnumType('vim.vsan.VsanUpdateItemType', 'VsanUpdateItemType', 'vsan.version.version3', ['vib' ,'offlinebundle' ,'vmhbaFirmware' ,])
CreateEnumType('vim.cluster.VsanHealthLogLevelEnum', 'VsanHealthLogLevelEnum', 'vim.version.version9', ['INFO' ,'WARNING' ,'ERROR' ,'DEBUG' ,'CRITICAL' ,])
CreateEnumType('vim.cluster.VsanPerfSummaryType', 'VsanPerfSummaryType', 'vim.version.version9', ['average' ,'maximum' ,'minimum' ,'latest' ,'summation' ,'none' ,])
CreateEnumType('vim.host.VsanEncryptionIssue', 'VsanEncryptionIssue', 'vsan.version.version3', ['enabledwhenclusterdisabled' ,'disabledwhenclusterenabled' ,'keyencryptionkeyinconsistent' ,'dataencryptionkeyinconsistent' ,'kmsinfoinconsistent' ,'servercertificatesinconsistent' ,'clientcertificateinconsistent' ,'clientkeyinconsistent' ,'hostkeyinconsistent' ,'erasedisksbeforeuseinconsistent' ,])
CreateEnumType('vim.cluster.VsanPerfStatsUnitType', 'VsanPerfStatsUnitType', 'vim.version.version9', ['number' ,'time_ms' ,'percentage' ,'size_bytes' ,'rate_bytes' ,'permille' ,])
CreateEnumType('vim.VsanPropertyConstraintComparatorEnum', 'VsanPropertyConstraintComparatorEnum', 'vsan.version.version3', ['EQUALS' ,'GREATER' ,'SMALLER' ,'CONTAINS' ,'TEXTUALLY_MATCHES' ,])
CreateEnumType('vim.vsan.host.DiskMappingCreationType', 'VimVsanHostDiskMappingCreationType', 'vim.version.version10', ['hybrid' ,'allFlash' ,])
CreateEnumType('vim.cluster.VsanClusterHealthActionIdEnum', 'VsanClusterHealthActionIdEnum', 'vim.version.version9', ['RepairClusterObjectsAction' ,'UploadHclDb' ,'UpdateHclDbFromInternet' ,'EnableHealthService' ,'DiskBalance' ,'StopDiskBalance' ,'RemediateDedup' ,'UpgradeVsanDiskFormat' ,'CreateDVS' ,'ConfigureHA' ,'ConfigureDRS' ,'ConfigureVSAN' ,'ClaimVSANDisks' ,'ClusterUpgrade' ,'CreateVMKnic' ,'CreateVMKnicWithVMotion' ,'RunBurnInTest' ,'EnableIscsiTargetService' ,'EnablePerformanceServiceAction' ,'RemediateClusterConfig' ,'EnableCeip' ,'LoginVumIsoDepot' ,])
CreateEnumType('vim.host.VsanDiskBalanceState', 'VsanDiskBalanceState', 'vsan.version.version3', ['rebalanceoff' ,'rebalanceentitydecom' ,'rebalancediskunhealthy' ,'imbalancewithintolerance' ,'reactiverebalanceinprogress' ,'reactiverebalancefailed' ,'proactiveneededbutdisabled' ,'proactiverebalanceinprogress' ,'proactiverebalancefailed' ,])
CreateEnumType('vim.vsan.host.TrafficType', 'VimVsanHostTrafficType', 'vim.version.version11', ['vsan' ,'witness' ,])
CreateEnumType('vim.cluster.VsanDiskGroupCreationType', 'VimClusterVsanDiskGroupCreationType', 'vim.version.version10', ['allflash' ,'hybrid' ,])
CreateEnumType('vim.vsan.host.StatsType', 'VsanHostStatsType', 'vsan.version.version3', ['resyncIopsInfo' ,'configGeneration' ,])
CreateEnumType('vim.VsanMassCollectorObjectCollectionEnum', 'VsanMassCollectorObjectCollectionEnum', 'vsan.version.version3', ['ALL_HOSTS' ,'ALL_VSAN_ENABLED_HOSTS' ,'ALL_CLUSTERS' ,'ALL_VSAN_ENABLED_CLUSTERS' ,'VCENTER' ,'SERVICE_INSTANCE' ,'ALL_VSAN_ENABLED_HOSTS_EXCEPT_WITNESS' ,])
CreateEnumType('vim.host.VsanObjectHealthState', 'VsanObjectHealthState', 'vim.version.version9', ['inaccessible' ,'reducedavailabilitywithnorebuild' ,'reducedavailabilitywithnorebuilddelaytimer' ,'reducedavailabilitywithactiverebuild' ,'datamove' ,'nonavailabilityrelatedreconfig' ,'nonavailabilityrelatedincompliance' ,'healthy' ,])
CreateEnumType('vim.vsan.VsanVcsaDeploymentPhase', 'VimVsanVsanVcsaDeploymentPhase', 'vim.version.version11', ['initializing' ,'validation' ,'vsanbootstrap' ,'ovaunpack' ,'vcsadeploy' ,'vcconfig' ,'done' ,'failed' ,])
CreateEnumType('vim.cluster.VsanCapabilityStatus', 'VsanCapabilityStatus', 'vsan.version.version3', ['unknown' ,'oldversion' ,'disconnected' ,'calculated' ,])
CreateEnumType('vim.cluster.VsanIscsiLUNStatus', 'VsanIscsiLUNStatus', 'vim.version.version11', ['Online' ,'Offline' ,])
CreateEnumType('vim.cluster.VsanCapabilityType', 'VsanCapabilityType', 'vim.version.version10', ['capability' ,'allflash' ,'stretchedcluster' ,'dataefficiency' ,'clusterconfig' ,'upgrade' ,'objectidentities' ,'iscsitargets' ,'witnessmanagement' ,'perfsvcverbosemode' ,'encryption' ,'decomwhatif' ,'throttleresync' ,'unicastmode' ,'nestedfd' ,'complianceprecheck' ,'vumintegration' ,'firmwareupdate' ,'configassist' ,'umap' ,'pr1741414fixed' ,'cloudhealth' ,'perfanalysis' ,])
CreateEnumType('vim.vsan.VsanHealthPerspective', 'VsanHealthPerspective', 'vsan.version.version3', ['defaultView' ,'deployAssist' ,])
CreateEnumType('vim.cluster.VsanIscsiTargetAuthType', 'VsanIscsiTargetAuthType', 'vim.version.version11', ['NoAuth' ,'CHAP' ,'CHAP_Mutual' ,])
CreateEnumType('vim.cluster.StorageComplianceStatus', 'VsanStorageComplianceStatus', 'vim.version.version9', ['compliant' ,'nonCompliant' ,'unknown' ,'notApplicable' ,])
CreateEnumType('vim.cluster.VsanPerfThresholdDirectionType', 'VsanPerfThresholdDirectionType', 'vim.version.version9', ['upper' ,'lower' ,])
CreateEnumType('vim.cluster.VsanPerfStatsType', 'VsanPerfStatsType', 'vim.version.version9', ['absolute' ,'delta' ,'rate' ,])
CreateEnumType('vim.host.VsanSmartParameterType', 'VsanSmartParameterType', 'vsan.version.version3', ['smarthealthstatus' ,'smartmediawearoutindicator' ,'smartwriteerrorcount' ,'smartreaderrorcount' ,'smartpoweronhours' ,'smartpowercyclecount' ,'smartreallocatedsectorct' ,'smartrawreaderrorrate' ,'smartdrivetemperature' ,'smartdriveratedmaxtemperature' ,'smartwritesectorstotct' ,'smartreadsectorstotct' ,'smartinitialbadblockcount' ,])